    Instituto Federal do Sudeste de Minas Gerais
   Curso Superior de Tecnologia em Sistemas para Internet




Gerência e Configuração de Serviços de Internet




                   Relatórios do 6o período do Curso Superior
                                de Tecnologia em Sistemas para
                                        Internet do ano de 2022.
                                             João Lucas Terra Farias
                                             Ruan Pablo de Almeida


                         Versão 0.0.1
                    Câmpus Barbacena-MG
                     10 de janeiro de 2023
Sumário

Prefácio                                                                                     viii

1 Instalação do Rocky Linux 9                                                                  1
  1.1   Iniciando a Instalação   . . . . . . . . . . . . . . . . . . . . . . . . . . . . .     1
        1.1.1   Configurando o Fuso Horário      . . . . . . . . . . . . . . . . . . . . .     1
        1.1.2   Desativando o KDUMP        . . . . . . . . . . . . . . . . . . . . . . . .     4
        1.1.3   Configurando a Rede . . . . . . . . . . . . . . . . . . . . . . . . . .        4
        1.1.4   Configurando o Particionamento do Sistema . . . . . . . . . . . . .            6
        1.1.5   Adicionando a fonte de instalação . . . . . . . . . . . . . . . . . . .        9
        1.1.6   Configurando para Instalação Mínima . . . . . . . . . . . . . . . . . 10
        1.1.7   Criando os usuários do sistema . . . . . . . . . . . . . . . . . . . . 11
        1.1.8   Finalizando Instalação . . . . . . . . . . . . . . . . . . . . . . . . . 12
  1.2   Instalando os pacotes necessários . . . . . . . . . . . . . . . . . . . . . . . 13
        1.2.1   (Opcional) Auxílio na hora de digitar comandos . . . . . . . . . . . 13
  1.3   Desativando serviços . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 14
        1.3.1   Desativando SELINUX . . . . . . . . . . . . . . . . . . . . . . . . . 14
        1.3.2   Desativando Firewall . . . . . . . . . . . . . . . . . . . . . . . . . . 15

2 Configuração de rede do Rocky Linux 9                                                       16
  2.1   Configurando interfaces de rede . . . . . . . . . . . . . . . . . . . . . . . . 16
        2.1.1   Configurando interface interna . . . . . . . . . . . . . . . . . . . . . 17
  2.2   Testando o Acesso à Internet . . . . . . . . . . . . . . . . . . . . . . . . . . 18
  2.3   Configurando o Repasse de Pacotes (NAT) . . . . . . . . . . . . . . . . . . 18
  2.4   Configurando o Roteamento entre as Bancadas . . . . . . . . . . . . . . . . 18

3 Servidor de acesso remoto com SSH                                                           20
  3.1   Instalando o Servidor SSH . . . . . . . . . . . . . . . . . . . . . . . . . . . 20
  3.2   Configurando o Servidor SSH . . . . . . . . . . . . . . . . . . . . . . . . . 21
  3.3   Acessando o Servidor SSH . . . . . . . . . . . . . . . . . . . . . . . . . . . 22
  3.4   Fazendo cópias remotas . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 22
SUMÁRIO                                                                                    ii

  3.5   (Opcional) SSH com chave criptografada . . . . . . . . . . . . . . . . . . . 23

4 Servidor DHCP                                                                           26
  4.1   Instalando o serviço DHCP em um servidor . . . . . . . . . . . . . . . . . 26
  4.2   Configurando o Servidor DHCP . . . . . . . . . . . . . . . . . . . . . . . . 26
        4.2.1   Configurando IP Fixo via DHCP . . . . . . . . . . . . . . . . . . . 29
        4.2.2   Ativando o servidor DHCP . . . . . . . . . . . . . . . . . . . . . . . 29

5 Squid                                                                                   30
  5.1   Instalando o Squid . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 30
  5.2   Configurando o Servidor Squid . . . . . . . . . . . . . . . . . . . . . . . . . 30
  5.3   Iniciando o serviço e configurando cliente . . . . . . . . . . . . . . . . . . . 31
  5.4   Criando ACLs específicas . . . . . . . . . . . . . . . . . . . . . . . . . . . . 32
        5.4.1   Bloqueando máquinas ou redes . . . . . . . . . . . . . . . . . . . . 32
        5.4.2   Utilizando intervalos de tempo . . . . . . . . . . . . . . . . . . . . . 33
        5.4.3   Bloqueando domínios . . . . . . . . . . . . . . . . . . . . . . . . . . 33
        5.4.4   Utilizando expressões regulares . . . . . . . . . . . . . . . . . . . . 33
  5.5   Squid com Autenticação . . . . . . . . . . . . . . . . . . . . . . . . . . . . 34
        5.5.1   Criando o arquivo de senhas . . . . . . . . . . . . . . . . . . . . . . 35
        5.5.2   Criando ACL de autenticação específica para usuários . . . . . . . . 35
  5.6   Regras de iptables de proxy manual . . . . . . . . . . . . . . . . . . . . . . 36
  5.7   Configurando Cache . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 36

6 Servidor de Nomes (DNS)                                                                 38
  6.1   Introdução . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 38
  6.2   Instalação . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 38
  6.3   Configurando o Bind . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 39
        6.3.1   Liberando acesso ao servidor DNS . . . . . . . . . . . . . . . . . . . 39
        6.3.2   Incluindo diretório de zonas . . . . . . . . . . . . . . . . . . . . . . 40
  6.4   Configurando arquivo local (zonas) . . . . . . . . . . . . . . . . . . . . . . 40
        6.4.1   Configurando zonas de encaminhamento . . . . . . . . . . . . . . . 40
        6.4.2   Configurando DNS reverso . . . . . . . . . . . . . . . . . . . . . . . 43
  6.5   Verificando configuração . . . . . . . . . . . . . . . . . . . . . . . . . . . . 44
  6.6   Configurando slave . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 45

7 Servidor HTTP Apache                                                                    48
  7.1   Instalação . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 48
  7.2   Configurações gerais . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 49
        7.2.1   Configurando a página inicial . . . . . . . . . . . . . . . . . . . . . 51
SUMÁRIO                                                                                   iii

        7.2.2   Configurando VirtualHosts . . . . . . . . . . . . . . . . . . . . . . . 53
  7.3   Habilitando suporte ao PHP . . . . . . . . . . . . . . . . . . . . . . . . . . 56
  7.4   Habilitando HTTPS . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 57
        7.4.1   Criando um certificado . . . . . . . . . . . . . . . . . . . . . . . . . 57
        7.4.2   Utilizando SSL com servidor Apache . . . . . . . . . . . . . . . . . 59
        7.4.3   Redirecionando de HTTP para HTTPS . . . . . . . . . . . . . . . . 61
  7.5   Arquivo .htaccess . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 62
        7.5.1   Autenticando usuários com .htaccess . . . . . . . . . . . . . . . . . 62

8 Nginx                                                                                   63
  8.1   Instalação . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 63
  8.2   Hospedando site HTTP . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 63
  8.3   Hospedando site HTTPS . . . . . . . . . . . . . . . . . . . . . . . . . . . . 65
  8.4   Redirecionamento automático para HTTPS          . . . . . . . . . . . . . . . . . 66
  8.5   Balanceamento de carga . . . . . . . . . . . . . . . . . . . . . . . . . . . . 66
  8.6   Redirecionamento para outras aplicações . . . . . . . . . . . . . . . . . . . 67

9 Servidor FTP                                                                            69
  9.1   Instalando o Servidor FTP . . . . . . . . . . . . . . . . . . . . . . . . . . . 69
  9.2   Configurando o FTP . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 70
  9.3   Impedindo o usuário de acessar a raiz do sistema . . . . . . . . . . . . . . 71
  9.4   Comunicação FTP segura . . . . . . . . . . . . . . . . . . . . . . . . . . . 72
  9.5   Impedindo acesso via SSH . . . . . . . . . . . . . . . . . . . . . . . . . . . 74

10 Servidor de Email                                                                      75
  10.1 Instalando o serviços necessários para o funcionamento do servidor de email 75
  10.2 Utilizando telnet . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 76
  10.3 Configurando o serviço postfix . . . . . . . . . . . . . . . . . . . . . . . . . 79
  10.4 Instalando Dovecot . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 81
  10.5 Configurando a comunicação com Segurança . . . . . . . . . . . . . . . . . 84
  10.6 Configurando o cliente (Evolution) . . . . . . . . . . . . . . . . . . . . . . 85
  10.7 Autenticação ssl . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 88
        10.7.1 Configurando Evolution com criptografia . . . . . . . . . . . . . . . 91
  10.8 Configurando Web Mail . . . . . . . . . . . . . . . . . . . . . . . . . . . . 94

A Firewall                                                                              100
  A.1 Configurando o firewall (alteração temporária) . . . . . . . . . . . . . . . . 100
  A.2 Configurando o firewall (configuração persistente) . . . . . . . . . . . . . . 102
Lista de Figuras

 1.1   Tela inicial para instalação do sistema. . . . . . . . . . . . . . . . . . . . .    2
 1.2   Tela de configuração do idioma do sistema. . . . . . . . . . . . . . . . . . .      2
 1.3   Tela de menu de configuração do Sistema. . . . . . . . . . . . . . . . . . .        3
 1.4   Tela de configuração de Fuso Horário. . . . . . . . . . . . . . . . . . . . . .     3
 1.5   Tela de configuração do kdump. . . . . . . . . . . . . . . . . . . . . . . . .      4
 1.6   Tela de configuração da interface de rede externa. . . . . . . . . . . . . . .      5
 1.7   Definindo um nome de host e domínio da máquina. . . . . . . . . . . . . .           5
 1.8   Tela de seleção do disco. . . . . . . . . . . . . . . . . . . . . . . . . . . . .   6
 1.9   Tela de criação da partição "/". . . . . . . . . . . . . . . . . . . . . . . . .    7
 1.10 Tela de configuração da partição "/". . . . . . . . . . . . . . . . . . . . . .      7
 1.11 Tela de configuração da partição "/home". . . . . . . . . . . . . . . . . . .        8
 1.12 Tela de criação da partição "swap". . . . . . . . . . . . . . . . . . . . . . .      8
 1.13 Tela de configuração da partição "swap". . . . . . . . . . . . . . . . . . . .       9
 1.14 Tela de confirmação do particionamento. . . . . . . . . . . . . . . . . . . .        9
 1.15 Tela de configuração da fonte de instalação. . . . . . . . . . . . . . . . . . 10
 1.16 Tela de Instalação Mínima de programas. . . . . . . . . . . . . . . . . . . . 10
 1.17 Tela de definição de senha root. . . . . . . . . . . . . . . . . . . . . . . . . 11
 1.18 Tela de criação de usuário. . . . . . . . . . . . . . . . . . . . . . . . . . . . 11
 1.19 Tela de início da instalação. . . . . . . . . . . . . . . . . . . . . . . . . . . 12
 1.20 Tela do fim da instalação. . . . . . . . . . . . . . . . . . . . . . . . . . . . 12
 1.21 Tela de escolha de sistema. . . . . . . . . . . . . . . . . . . . . . . . . . . . 13
 1.22 Tela de login do sistema. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 13

 2.1   Teste de funcionamento da placa externa. . . . . . . . . . . . . . . . . . . . 16
 2.2   Saída do comando ip addr. . . . . . . . . . . . . . . . . . . . . . . . . . . . 17

 3.1   Resultado do comando ps aux | grep sshd . . . . . . . . . . . . . . . . . . . 20
 3.2   Primeiro acesso a um servidor SSH . . . . . . . . . . . . . . . . . . . . . . 22
 3.3   Processo de criação de chaves para acesso SSH . . . . . . . . . . . . . . . . 24
 3.4   Arquivos contendo as chaves . . . . . . . . . . . . . . . . . . . . . . . . . . 24
LISTA DE FIGURAS                                                                           v

  4.1   Linhas comentadas. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 27
  4.2   Configurando o intervalo de ips do servidor DHCP. . . . . . . . . . . . . . 28
  4.3   Configurando um IP fixo no servidor DHCP. . . . . . . . . . . . . . . . . . 29

  5.1   Acl’s de dominios. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 33
  5.2   Acl’s com regex. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 33
  5.3   Urls para bloqueios. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 34
  5.4   Atenticações com ACL. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 34
  5.5   Acl’s para usuario. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 36
  5.6   Restrições para as acl’s criadas. . . . . . . . . . . . . . . . . . . . . . . . . 36

  6.1   Acesso ao servidor DNS. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 39
  6.2   Configuração de zonas do DNS. . . . . . . . . . . . . . . . . . . . . . . . . 40
  6.3   Zonas de Encaminhamento DNS. . . . . . . . . . . . . . . . . . . . . . . . 41
  6.4   Configuração do DNS reverso. . . . . . . . . . . . . . . . . . . . . . . . . . 43
  6.5   Configuração arquivo do DNS reverso. . . . . . . . . . . . . . . . . . . . . 44
  6.6   Arquivo mynamed.conf. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 45
  6.7   Configurando slave. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 46
  6.8   Zonas slave. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 46

  7.1   Página de teste do serviço HTTP . . . . . . . . . . . . . . . . . . . . . . . 49
  7.2   Exemplos de mensagens e páginas de erros personalizadas . . . . . . . . . . 51
  7.3   Página inicial do servidor baseada na estrutura de diretórios 1 . . . . . . . 52
  7.4   Página inicial do servidor baseada na estrutura de diretórios 2 . . . . . . . 52
  7.5   Modo de uso da diretiva VirtualHost. . . . . . . . . . . . . . . . . . . . . . 53
  7.6   VirtualHost contendo as configurações mínimas necessárias. . . . . . . . . . 53
  7.7   Configurações extras . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 54
  7.8   Arquivo 000-default.conf. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 55
  7.9   Diretiva directory básica. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 55
  7.10 Configuração básica de uma zona DNS. . . . . . . . . . . . . . . . . . . . . 56
  7.11 Código PHP para mostrar informações sobre o PHP. . . . . . . . . . . . . 57
  7.12 Exemplo de como deve estar o arquivo openssl.conf . . . . . . . . . . . . . 58
  7.13 Comandos para a criação de um Cartório Digital         . . . . . . . . . . . . . . 58
  7.14 Exemplo de configurações a serem adicionadas no arquivo truco.com.br.conf 60
  7.15 VirtualHost com Redirect. . . . . . . . . . . . . . . . . . . . . . . . . . . . 61
  7.16 Autenticação com .htaccess. . . . . . . . . . . . . . . . . . . . . . . . . . . 62

  8.1   Configuração padrão de uma aplicação. . . . . . . . . . . . . . . . . . . . . 63
  8.2   Arquivo html simples . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 64
LISTA DE FIGURAS                                                                          vi

  8.3   Site rodando normalmente na porta 80. . . . . . . . . . . . . . . . . . . . . 65
  8.4   Configuração do site HTTPS. . . . . . . . . . . . . . . . . . . . . . . . . . 65
  8.5   Adicionando redirecionamento HTTPS. . . . . . . . . . . . . . . . . . . . . 66
  8.6   Balanceamento de carga. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 67
  8.7   Redirecionando para outras aplicações dentro do domínio. . . . . . . . . . 67
  8.8   Aplicação rodando em outra máquina sendo acessada pelo domínio truco.com.br 68

  9.1   Acessando servidor FTP pela primeira vez. . . . . . . . . . . . . . . . . . . 70
  9.2   Acessando servidor FTP após alterar configurações e enviando arquivo
        teste.html . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 71
  9.3   Segunrança no FTP. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 72
  9.4   Acessando servidor FTP com criptografia . . . . . . . . . . . . . . . . . . . 73
  9.5   Alterando shell do usuário para /sbin/nologin . . . . . . . . . . . . . . . . 74

  10.1 Exemplo de um email enviado por telnet . . . . . . . . . . . . . . . . . . . 77
  10.2 Conteudo do arquivo mailog . . . . . . . . . . . . . . . . . . . . . . . . . . 78
  10.3 Arquivo main.c . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 79
  10.4 Arquivo dovecot.conf . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 81
  10.5 Arquivo 10-auth.conf . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 82
  10.6 Arquivo 10-master.conf . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 83
  10.7 Primeira janela de configuração Evolution. . . . . . . . . . . . . . . . . . . 85
  10.8 Segunda janela de configuração Evolution. . . . . . . . . . . . . . . . . . . 86
  10.9 última janela de configuração Evolution. . . . . . . . . . . . . . . . . . . . 87
  10.10Arquivo main.cf . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 88
  10.11main.cf . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 88
  10.12master.cf . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 89
  10.1310-ssl.conf . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 90
  10.14Primeira janela de configuração Evolution. . . . . . . . . . . . . . . . . . . 91
  10.15Segunda janela de configuração Evolution. . . . . . . . . . . . . . . . . . . 92
  10.16última janela de configuração Evolution. . . . . . . . . . . . . . . . . . . . 93
  10.17Primeira parte das configurações no arquivo roundcubemail.conf . . . . . . 94
  10.18Segunda parte das configurações no arquivo roundcubemail.conf . . . . . . 95
  10.19Tela inicial configuração do webmail . . . . . . . . . . . . . . . . . . . . . . 96
  10.20Configurando webmail . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 97
  10.21Linhas de configuração adicionadas ao arquivo config.inc.php . . . . . . . . 98
  10.22Testando servidor de email com criptografia . . . . . . . . . . . . . . . . . 98
  10.23Tela de login do roundcube . . . . . . . . . . . . . . . . . . . . . . . . . . . 99

  A.1 Parametros para o campo subcomandos. . . . . . . . . . . . . . . . . . . . 101
LISTA DE FIGURAS                                                                        vii

  A.2 Parametros para o campo chain. . . . . . . . . . . . . . . . . . . . . . . . . 101
  A.3 Arquivo shellscript contendo as configurações necessárias para o funciona-
       mento do firewall . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 102
  A.4 Configurações necessárias para o funcionamento persistente do firewall . . . 104
Prefácio

Este relatório, criado a partir das aulas da matéria de Gerência e Configuração de Serviços
de Internet, possui informações detalhadas de como se montar um servidor utilizando o
sistema Rocky Linux 9, baseado nas distribuições Red Hat.
   O Rocky Linux foi escolhido com o intuito de já trazer a prática usada no mercado de
trabalho, pois o mesmo, atualmente, possui uma maior utilização das distribuições Red
Hat. Todos os passos inseridos neste relatório, foram testados e utilizados pelos alunos
para comprovarem a efetividade dos mesmos, assim pode-se acompanhar com a garantia
que no final, o servidor Rocky Linux estará funcionando.
Capítulo 1

Instalação do Rocky Linux 9

Neste capítulo é mostrado como efetuar a instalação e configuração inicial do Rocky Linux
9 para uso em servidores.


1.1     Iniciando a Instalação
Para iniciar a instalação, utilize o CD do Rocky Linux 64 bits para dar boot no sistema.
Será aberta uma tela, como mostrado em Figura 1.1, para que o usuário escolha entre
começar a instalação do sistema ou fazer uma verificação do CD para garantir sua integri-
dade. Caso tenha garantias de que o CD está em correto funcionamento, pode-se escolher
diretamente a opção de instalação "Install Rocky Linux 9.0", mas ainda sim é recomen-
dado sempre fazer a verificação do CD para evitar futuros problemas na instalação.
   Após a verificação do disco, será dado início à instalação do sistema. A primeira tela
a se configurar, será a do idioma da instalação como mostrado na Figura 1.2 sendo a
primeira opção para o usuário configurar.
   Após a seleção do idioma, é mostrado uma tela como as opções de configurações do
sistema, como exemplificado na Figura 1.3. A partir de agora será iniciado as configurações
personalizadas do Rocky Linux 9.


1.1.1    Configurando o Fuso Horário
Ainda na tela de configuração do sistema, selecione a primeira opção: "HORA E DATA".
Será mostrado uma tela como a Figura 1.4. Utilize as opções "Região" e "Cidade" para
escolher o fuso horário mais próximo do seu local. Após a configurar o fuso horário, clique
no botão "Pronto" para voltar ao menu de configuração.
1.1 Iniciando a Instalação                                             2




                Figura 1.1: Tela inicial para instalação do sistema.




              Figura 1.2: Tela de configuração do idioma do sistema.
1.1 Iniciando a Instalação                                            3




               Figura 1.3: Tela de menu de configuração do Sistema.




                 Figura 1.4: Tela de configuração de Fuso Horário.
1.1 Iniciando a Instalação                                                              4

1.1.2    Desativando o KDUMP
Agora desative a opção de kdump para que o mesmo não gere dumps da memória RAM,
que podem conter informações desnecessárias para o servidor.
   Clique na opção "KDUMP" no menu de configuração para abrir a tela do mesmo.
Desmarque o campo "Ativar kdump" como mostrado na Figura 1.5 e por fim volte ao
menu principal clicando no botão "Pronto".




                      Figura 1.5: Tela de configuração do kdump.



1.1.3    Configurando a Rede
Inicia-se agora as configurações de rede do Servidor Rocky Linux. No menu de configura-
ção, clique na opção "REDE E NOME DO HOST" para abrir a tela de configuração das
Interfaces de Rede de sua máquina. Nesta, todas as interfaces de rede da sua máquina
estarão sendo listadas na coluna da esquerda. Identifique a sua interface de rede externa
(enp0s3 neste exemplo) e clique no botão "Configurar", após isto, abrirá uma tela de
configuração como a exemplificada na Figura 1.6.
   Nesta tela, serão feitas todas as configurações da sua interface de rede externa. Sele-
cione a aba "Configurações IPV4" e insira seu ip de forma manual.
   Concluídas as configurações da interface de rede externa clique no botão "Salvar" para
que as configurações sejam persistidas no sistema.
   Quanto as configurações da interface da rede interna, não é necessário realizar nenhuma
configuração neste momento, pois essa interface será configurada futuramente de forma
1.1 Iniciando a Instalação                                                         5




             Figura 1.6: Tela de configuração da interface de rede externa.

manual.
   Por último, deve-se configurar um nome de host e um domínio para sua máquina. No
campo "Nome do host" digite um nome e algum domínio qualquer. Neste exemplo será
utilizado "servidor.exemplo.com"como exemplificado na Figura 1.7. Após definir o nome
e domínio do host e clicar em "Aplicar", o campo "Nome do host atual" deve ter sido
alterado para o que foi digitado. Após isso, clique em "Pronto".




            Figura 1.7: Definindo um nome de host e domínio da máquina.
1.1 Iniciando a Instalação                                                            6

1.1.4    Configurando o Particionamento do Sistema
No menu de configurações do sistema, clique na opção "DESTINO DA INSTALAÇÃO".
Será aberto uma nova tela mostrando os discos disponíveis na sua máquina. Selecione o
disco onde deseja instalar seu servidor e na seção de "Configurações de armazenamento"
marque a opção "Personalizada" como é mostrado na Figura 1.8. Por fim, clique no
botão "Pronto" para ser redirecionado à tela de particionamento. Vale lembrar que neste
relatório consta a instalação do servidor Rocky Linux em uma máquina com apenas 8 GB
de disco, por isto os seguintes valores podem parecer baixos.




                          Figura 1.8: Tela de seleção do disco.

   Na tela de particionamento, será mostrado uma coluna à esquerda para seleção do
tipo de partição que se deseja criar. Selecione a opção de "Partição Padrão" e clique no
botão "+"(Adicionar). Abrirá um pequeno pop-up como na Figura 1.9, onde poderá ser
escolhido o tipo de partição a se criar e qual o tamanho da mesma. Neste exemplo será
criado a partição raíz do sistema"/" com o tamanho de 4GB. Por fim, basta clicar no
botão "Adicionar ponto de montagem" que a partição será criada.
   Após a criação da partição, deve-se corrigir o tamanho da partição para 4GB de fato e
alterar o sistema de arquivos. No campo "Capacidade desejada" caso não esteja os 4GB
que colocados, altere para 4GB e no campo "Sistema do Arquivo" altere para ext4. Por
último, no campo “Rótulo” (nome da partição) coloque ROOT. A configuração da partição
“/” deve estar similar a da Figura 1.10
   Após a criação da partição "/", deve-se criar a partição “/home” da mesma forma que
a anterior, apenas mudando o tamanho da partição de 4GB para 3GB e acrescentando o
“Rótulo” HOME. A configuração da partição “/home” deve estar similar a da Figura 1.11.
1.1 Iniciando a Instalação                                           7




                   Figura 1.9: Tela de criação da partição "/".




                Figura 1.10: Tela de configuração da partição "/".
1.1 Iniciando a Instalação                                                              8




                Figura 1.11: Tela de configuração da partição "/home".

   Por último, deve-se criar a partição "swap". Ao clicar no "+"(Adicionar) e selecionar
a partição swap, não informe a capacidade desejada, assim todo espaço restante será
reservado para a partição como mostrado na Figura 1.12.




                   Figura 1.12: Tela de criação da partição "swap".

   A única configuração adicional a ser feita na partição swap é adicionar ao campo"Rótulo
o nome SWAP. Após isso, o particionamento estará similar ao da Figura 1.13 e pode-se
por fim, clicar no botão "Pronto" e prosseguir para última parte do particionamento.
   Por último será perguntado se você deseja destruir a tabela de particionamento que
ja existia, clique no botão "Aceitar mudanças" para prosseguir como mostrado na Fi-
1.1 Iniciando a Instalação                                                          9




                Figura 1.13: Tela de configuração da partição "swap".

gura 1.14.




                Figura 1.14: Tela de confirmação do particionamento.



1.1.5    Adicionando a fonte de instalação
No menu inicial, clique na seção "FONTE DA INSTALAÇÃO" e na seção "Qual fonte
de instalação deseja usar" marque a opção Na rede, e adicione a URL: https://download.
rockylinux.org/pub/rocky/9/BaseOS/x86_64/os como mostra a Figura 1.15. Feito isso,
clique no botão "Pronto" para prosseguir.
1.1 Iniciando a Instalação                                                      10




               Figura 1.15: Tela de configuração da fonte de instalação.

1.1.6    Configurando para Instalação Mínima
No menu principal, clique no botão "SELEÇÃO DE PROGRAMAS". Nesta nova janela,
marque a opção "Instalações Mínimas" caso a mesma não esteja marcado, como mostrado
na Figura 1.16, e por fim salve as alterações clicando no botão "Pronto".




                 Figura 1.16: Tela de Instalação Mínima de programas.
1.1 Iniciando a Instalação                                                            11

1.1.7    Criando os usuários do sistema
Antes de criar um usuário do sistema, defina uma senha root. No menu inicial, clique em
"SENHA DO ROOT", desmarque as duas opções que aparecerem (será permitido login
ssh como root futuramente) como mostra na Figura 1.17, escolha uma senha segura e
clique no botao "Pronto".




                     Figura 1.17: Tela de definição de senha root.

   Após definir a senha do root, crie um usuário administrador. No menu inicial, clique
em "CRIAÇÃO DE USUÁRIO". O campo "Nome completo" pode ser definido qualquer
nome, pois esse nome não importa para o sistema. Já o campo "Nome do usuário" é
importante definir algo consistente, pois é esse nome que importa para o sistema e o qual
será utilizado ao realizar login. Marque as opções "Tornar esse usuário administrador"
(permitir que esse usuário utilize o comando sudo) e "Necessário uma senha para usar
essa conta" (por razões de segurança) e por fim, defina uma senha segura para o usuário,
como mostrado na Figura 1.18 e clique no botão "Pronto".




                        Figura 1.18: Tela de criação de usuário.
1.1 Iniciando a Instalação                                                            12

1.1.8    Finalizando Instalação
Após realizar todas as configurações citadas, será iniciado a instalação de fato. No menu
inicial, clique no botão "Iniciar a Instalação" como mostra na Figura 1.19. Aguarde até
o fim da instalação e clique em "Reiniciar o sistema" como mostra na Figura 1.20.




                       Figura 1.19: Tela de início da instalação.




                        Figura 1.20: Tela do fim da instalação.

   Após reiniciar o sistema, aparecerá uma tela preta esperando a escolha do sistema
para dar boot. Escolha a primeira opção como mostra a Figura 1.21. Feito isso, espere o
sistema dar boot e por fim, surgirá a tela de login do sistema. Digite o nome do usuário
que cadastramos na seção anterior, e logo em seguida, a senha desse usuário como mostra
na Figura 1.22.
1.2 Instalando os pacotes necessários                                                  13




                        Figura 1.21: Tela de escolha de sistema.




                         Figura 1.22: Tela de login do sistema.

1.2     Instalando os pacotes necessários
Após a instalação (e periodicamente) é recomendado ficar buscando por atualizações novas
para manter o sistema atualizado e protegido de falhas. Para atualizar o servidor Rocky
Linux, utilize o seguinte comando:

    $ sudo dnf update

   Caso tenha alguma atualização a ser feita, basta confirmar e atualizar o sistema.
   Um pacote essencial para o andamento das configurações, é o poderoso editor de texto
vim. Instale o vim com o seguinte comando:

    $ sudo dnf install vim

   Ao efetuar o comando, ele pedirá permissão para instalar o vim e suas dependências.
Basta confirmar tudo e a instalação estará completa.


1.2.1    (Opcional) Auxílio na hora de digitar comandos
Outro pacote interessante e muito útil, é o bash-completion, que completa um comando
ao apertar a tecla TAB. Para instalar o bash-completion, utilize o seguinte comando:
1.3 Desativando serviços                                                                 14

    $ sudo dnf install bash-completion

   Assim como o vim e qualquer outro pacote, ele vai perguntar se deseja instalar o pacote
e suas dependências, basta confirmar e a instalação estará completa.


1.3     Desativando serviços
Para não ter problemas futuros com algumas configurações, diminua as permissões do
SELINUX, que é uma camada de proteção a mais do linux, que diz oque pode ou não ser
acessado através de uma determinada política e também desabilite o firewall, pois pode
atrapalhar durante a configuração do SSH (após a configuração de todos os serviços im-
plementados, essas práticas serão desfeitas). Como a instalação feita é para fins didáticos,
não há muitos problemas em fazer isso, porém, essas práticas não devem ser levadas ao
mundo real, pois podem deixar o sistema vulnerável a ataques maliciosos.


1.3.1    Desativando SELINUX
Para verificar se o SELINUX está ativo, utilize o seguinte comando:

    $ sestatus

   Caso a opção "Current mode:" esteja enforcing, significa que está com as permissões
máximas e pode bloquear algumas de nossas configurações.
   Abra o arquivo de configuração do SELINUX com o seguinte comando:

    $ sudo vim /etc/selinux/config

   Desça até a linha com a opção SELINUX=enforcing e altere para:

    SELINUX=permissive

   Salve e feche o arquivo de configuração e verifique se após digitar o comando sestatus
novamente, a linha "Current mode:" alterou para permissive e reinicie o servidor para
que as alterações tenham efeito.
   Uma outra maneira de se alterar as permissões do SELINUX é pela linha de comando
(caso seja alterado somente pela linha de comando e a máquina for reiniciada, o que
prevalece é a configuração do arquivo). Digite o seguinte comando:

    setenforce 0

   Após digitar, as permissões do SELINUX mudarão para permissive até a máquina ser
reiniciada (caso não tenha alterado o modo pelo arquivo de configuração).
1.3 Desativando serviços                                                               15

1.3.2    Desativando Firewall
Para desativar o firewall, digite o comando:

    $ sudo systemctl stop firewalld.service

   E logo em seguida, para desabilitar o firewall de iniciar junto com o sistema, digite:

    $ sudo systemctl disable firewalld.service
Capítulo 2

Configuração de rede do Rocky Linux 9

Após terminar a instalação do servidor, a interface de rede externa já deve estar funci-
onando e acessando a rede normalmente, como mostra na figura abaixo. Como a placa
externa já está funcionando normalmente (configurada durante a instalação), será confi-
gurado pela linha de comando apenas a placa de rede interna.

[ a d m i n i s t r a d o r @ s e r v i d o r ~] $ ping www . google . com . br
PING www . google . com . br (142.251.128.99) 56(84) bytes de dados .
64 bytes de gru06s70 - in - f3 .1 e100 . net (142 .251.128 .99):
icmp_seq =1 ttl =119 tempo =12.5 ms
64 bytes de gru06s70 - in - f3 .1 e100 . net (142 .251.128 .99):
icmp_seq =2 ttl =119 tempo =12.3 ms
64 bytes de gru06s70 - in - f3 .1 e100 . net (142 .251.128 .99):
icmp_seq =3 ttl =119 tempo =12.0 ms


--- www . google . com . br estatisticas de ping ---
3 pacotes transmitidos , 3 recebidos , 0% packet loss , time 2005 ms
rtt min / avg / max / mdev = 1 1 . 9 5 9 / 1 2 . 2 3 9 / 1 2 . 4 8 3 / 0 . 2 1 5 ms


                      Figura 2.1: Teste de funcionamento da placa externa.




2.1       Configurando interfaces de rede
Antes de iniciar as configurações de rede, entre no modo root (modo com mais permissões
do linux). Digite o seguinte comando:

     $ su -

    e logo em seguida, digite a senha de root cadastrada durante a instalação.
    Para visualizar o ip tanto da interface externa quanto interna, basta utilizar o comando:
2.1 Configurando interfaces de rede                                                     17

     # ip addr


[ a d m i n i s t r a d o r @ s e r v i d o r ~] $ ip addr
1: lo : < LOOPBACK , UP , LOWER_UP > mtu 65536 qdisc noqueue state UNKNOWN group
default qlen 1000
      link / loopback 0 0:00:00: 00:00:00 brd 00: 00:00:00 :00:00
      inet 127.0.0.1/8 scope host lo
           valid_lft forever preferred_lft forever
      inet6 ::1/128 scope host
           valid_lft forever preferred_lft forever
2: enp0s3 : < BROADCAST , MULTICAST , UP , LOWER_UP > mtu 1500 qdisc fq_codel
state UP group default qlen 1000
      link / ether 08:00:27: ba :88:3 c brd ff : ff : ff : ff : ff : ff
      inet 192.168.0.107/24 brd 192.168.0.255 scope global noprefixroute
enp0s3
           valid_lft forever preferred_lft forever
      inet6 fe80 :: a00 :27 ff : feba :883 c /64 scope link noprefixroute
           valid_lft forever preferred_lft forever
3: enp0s8 : < BROADCAST , MULTICAST , UP , LOWER_UP > mtu 1500 qdisc fq_codel
state UP group default qlen 1000
      link / ether 08:00:27:00: fc :39 brd ff : ff : ff : ff : ff : ff


                                 Figura 2.2: Saída do comando ip addr.

    A linha inet do comando, representa o ipv4 da interface. Repare que a interface interna
(enp0s8) está sem nenhum ip porque ainda não foi configurada.


2.1.1       Configurando interface interna
Para configurar a rede interna, escolha uma faixa de ip que está fora do alcance da rede
externa (neste exemplo, a faixa de ip da rede externa é de 192.168.0.1 até 192.168.0.255).
    Primeiramente adicione um endereço ipv4 para a rede interna:

     # nmcli connection modify enp0s8 ipv4.addresses 10.3.1.17/28

    E depois mude o método pelo qual a interface está recebendo um ipv4:

     # nmcli connection modify enp0s8 ipv4.method manual

    Depois carregue o arquivo de configuração da interface:
     # nmcli connection load /etc/NetworkManager/
     system-connections/enp0s8.nmconnection
    E por fim, atualize a placa de rede:

     # nmcli connection up enp0s8
2.2 Testando o Acesso à Internet                                                       18

2.2     Testando o Acesso à Internet
Como a configuração da placa de rede externa enp0s3, o IP do servidor DNS e o IP
do gateway foram configurados devidamente, é possível agora verificar se o servidor está
conectado à Internet através do comando:

    # ping www.google.com.br

   No comando acima foi utilizado o endereço "www.google.com.br", porém pode ser
utilizado qualquer endereço IP ou de domínio acessível pois o endereço, nada mais é do
que um nome configurado para redirecionar a um IP válido. Havendo resposta positiva
do comando ping, pode-se concluir que a configurações de rede estão corretas.


2.3     Configurando o Repasse de Pacotes (NAT)
Agora que as interfaces de rede estão funcionando, deve-se configurar o repasse de pacotes
para que as máquinas clientes possam ter acesso à rede. Para isto, utilize os seguintes
comandos:

    # echo 1 > /proc/sys/net/ipv4/ip_forward

    # iptables –t nat –A POSTROUTING –o enp0s3 –j MASQUERADE

   Entretanto, toda vez que o servidor for reiniciado, as configurações serão perdidas,
por isto, até o presente momento, será necessário utilizar estes comandos sempre que o
servidor incializar para que a rede interna possa navegar na internet.


2.4     Configurando o Roteamento entre as Bancadas
Para que uma máquina interna da bancada posso se comunicar com outra máquina interna
de outra bancada é necessário que se faça a configuração das rotas nos servidores das
bancadas envolvidas. O comando a seguir exemplifica esta configuração para que a mesma
saiba se comunicar:

    # ip route add 10.3.1.32/28 via 192.168.0.128

   Deste modo, a bancada 1, saberá que para atingir a rede 10.3.1.32/28, deverá enviar
os pacotes para a máquina de ip 192.168.0.128, permitindo assim a comunicação entre
diferentes redes.
   Caso deseja-se configurar também uma rota padrão (default), utiliza-se o seguinte
comando:
2.4 Configurando o Roteamento entre as Bancadas                                     19

    # ip route add default via 192.168.0.1

   Neste caso, a rota padrão do servidor da bancada 1 estará direcionada para a máquina
de ip 192.168.0.1 que no nosso caso é o roteador de saída da rede.
Capítulo 3

Servidor de acesso remoto com SSH

       SSH (Secure Shell ) pode ser descrito como um protocolo de redes que dá aos usuários
a capacidade de acessar remotamente computadores através da rede de forma segura
(criptografada, diferentemente do telnet), e assim executar comandos e criar ou mover
diretórios e/ou arquivos.


3.1      Instalando o Servidor SSH
       Primeiramente, utilize o seguinte comando para descobrir se o protocolo SSH já se
encontra instalado em sua máquina:

    # ps aux | grep sshd

   Caso o serviço ja se encontre instalado ou em execução em sua máquina, o console
deverá produzir uma saída semelhante à saída da figura abaixo. Note que a última linha
exibida refere-se à pesquisa realizada pelo comando ps aux | grep sshd, portanto, não deve
ser considerada.


[ root@servidor ~] # ps aux | grep sshd
root               571   0.0   0.9   16116   9000 ?           Ss    22:14     0:00 sshd :
/ usr / sbin / sshd -D [ listener ] 0 of 10 -100 startups
root            1300     0.0   0.2    6432   2204 pts /0      S+    23:08
0:00 grep -- color = auto ssh


                    Figura 3.1: Resultado do comando ps aux | grep sshd




   Caso o terminal não exiba uma saída similar a exibida, basta utilizar o comando
abaixo, no modo root, para fazer a instalação do servidor e cliente SSH:
3.2 Configurando o Servidor SSH                                                        21

    # dnf install -y openssh-server


3.2     Configurando o Servidor SSH
  Para configurar o servidor SSH é preciso acessar o arquivo “/etc/ssh/sshd_config”.
Neste arquivo serão configurados a porta de acesso e o limite de acesso ao serviço SSH.

   • Por padrão, o protocolo SSH “escuta” as conexões na porta 22. Manter esta porta
      é um risco de segurança, portanto, é recomendável modifica-la e utilizar alguma
      outra porta, preferencialmente entre 1024 e 65535, pois são as portas que costumam
      estarem disponíveis para uso. Para alterar a porta usada para escutar as conexões
      SSH basta editar a seguinte linha:

       Port 22

   • Por padrão, o protocolo SSH permite a conexão remota em todas as interfaces de
      redes disponíveis. Caso deseje limitar o acesso a apenas uma das interfaces, deve-se
      alterar o endereço 0.0.0.0 para o endereço da interface desejada, na linha abaixo:


       ListenAddress 0.0.0.0




   • Por padrão é permitido que o root faça login por acesso remoto. No aspecto da
      segurança, isso não é muito desejavel, pois pode facilmente ocasionar no vazamento
      da senha de acesso. É preferivel que o acesso ao modo root possa ser feito apenas
      quando uma conexão segura já tiver sido estabelecida, ao realizar o acesso remoto
      com outro usuário qualquer,e para isso deve-se modificar o parâmetro yes para no
      na linha abaixo:


       PermitRootLogin yes


   Após qualquer alteração no arquivo de configuração, é necessário que o serviço SSH seja
reinicializado, para que as modificações entrem em vigor. Para isso, devem ser utilizados
os comandos abaixo, na respectiva ordem:

    # systemctl stop sshd

    # systemctl start sshd
3.3 Acessando o Servidor SSH                                                             22

3.3         Acessando o Servidor SSH
Para acessar remotamente o servidor SSH, basta digitar o comando a seguir em qualquer
outra máquina, onde usuário é o nome do perfil de usuário que deseja acessar, enquanto
ip remoto é o endereço IP da interface de rede da máquina servidora:

      # ssh usuario@ip remoto

     Caso o servidor SSH não utilize a porta padrão (porta 22), deve-se utilizar o parâmetro
“-p” ao utilizar o comando acima, seguido pela porta utilizada pela maquina servidora,
como pode ser visto abaixo:

      # ssh -p 12345 usuario@ip remoto

     Caso a máquina cliente esteja fazendo seu primeiro acesso a um determinado servidor,
uma mensagem será exibida, perguntando se o usuário confia na chave criptográfica forne-
cida pelo servidor.Caso o usuário confie nesta conexão, deve digitar “yes”, caso contrário,
deve digitar “no”. Note que não é possível abreviar esta resposta para simplesmente y ou
n, a palavra completa deve ser digitada.

C :\ Windows \ system32 > ssh administr ador@192 .168.0.107
The authenticity of host ’192.168.0.107 (192.168.0.107) ’
can ’ t be established .
ECDSA key fingerprint is
SHA256 : k c j 8 k t X p 3 T q t J n E 6 A 0 9 z N H T e c K X q j + thpZSp7iLgSuQ .
Are you sure you want to continue connecting ( yes / no /[ fingerprint ])? yes
Warning : Permanently added ’192.168.0.107 ’ ( ECDSA ) to the list of known
hosts .
admi nistrador @192 .168.0.107 ’ s password :
Last login : Sun Oct                   9 23:20:21 2022
[ a d m i n i s t r a d o r @ j o a o l u c a s ~] $


                               Figura 3.2: Primeiro acesso a um servidor SSH



3.4         Fazendo cópias remotas
Um servidor com acesso remoto por SSH também permite cópias remotas de arquivos,
tanto para a máquina servidora, quanto para a máquina cliente. Para realizar a copia
de um arquivo da máquina servidora (onde está instalado o serviço de SSH) para uma
máquina cliente, usa-se o comando “scp” conforme o exemplo abaixo:

      # scp -P 12345 root@10.3.1.17:/etc/ssh/sshd_config
      /home/administrador/Desktop
3.5 (Opcional) SSH com chave criptografada                                             23

   Neste exemplo, “/etc/ssh/sshd config” representa o arquivo que será copiado, en-
quando /̈home/administrador/Desktop representa o diretório para o qual o arquivo será
copiado. Note que o cliente deve encerrar qualquer conexão remota que possa porventura
ter sido estabelecida préviamente à execução do comando, senão o mesmo irá falhar e o
arquivo não será copiado.
   Uma forma simples de entender o comando scp é utilizando a seguinte sintaxe:

    # scp [-P porta] [origem] [destino]

   É importante ressaltar que, como descrito nos tópicos anteriores, o parâmetro -P e o
número da porta serão necessários apenas se o servidor remoto utilizar uma porta diferente
da porta padrão (porta 22).


3.5       (Opcional) SSH com chave criptografada
É possivel realizar o uso do protocolo SSH juntamente ao uso de um conjunto de chaves
públicas e privadas, para carantir ao máximo a confidencialidade e segurança da conexão.
Este tipo de acesso pode ser realizado utilizando os seguintes comandos:
   Primeiramente, deve-se instalar o seguinte pacote, para que seja possível gerar as
chaves:

    # dnf -y install openssh-client

   Logo após, na máquina cliente, deve-se gerar um par de chaves (publica e privada)
utilizando o seguinte comando:

    # ssh-keygen -t rsa -b 4096

   Onde -t representa o tipo de chave, sendo rsa o tipo escolhido para este exemplo, -b
representa o número de bits que a chave utilizará, sendo a quantia escolhida para este
exemplo 4096 bits. Será requisitado ao usuário que digite a senha que deseja atrelar a
esta chave privada gerada.
3.5 (Opcional) SSH com chave criptografada                                                  24




[ root@servidor ~] # ssh - keygen -t rsa -b 4096
Generating public / private rsa key pair .
Enter file in which to save the key (/ root /. ssh / id \ _rsa ):
Created directory ’/ root /. ssh ’.
Enter passphrase ( empty for no passphrase ):
Enter same passphrase again :
Your identification has been saved in / root /. ssh / id \ _rsa
Your public key has been saved in / root /. ssh / id \ _rsa . pub
The key fingerprint is :
SHA256 : CzF7va / B H I 8 K B b d H A 9 3 Y 8 4 j S W K K e l T 5 t g t 5 r 9 D K Z O M 0
root@servidor . exemplo . com
The key ’ s randomart image is :
+ - - -[ RSA 4096] - - - -+
|               .. +            |
|               ..+ +           |
|           +..* o . +          |
|           .*=+ o .. .         |
|         . o = So +            |
|           ++== o =            |
|         ..*. B * .            |
|           +. E .. o           |
|             oo +...           |
+ - - - -[ SHA256 ] - - - - -+


                       Figura 3.3: Processo de criação de chaves para acesso SSH




[ root@servidor . ssh ] # ls - la
total 16
drwx - - - - - -. 2 root root 4096 out                      9 23:28 .
dr - xr -x - - -. 3 root root 4096 out                      9 23:28 ..
-rw - - - - - - -. 1 root root 3434 out                     9 23:28 id_rsa
-rw -r - -r - -. 1 root root                751 out         9 23:28 id_rsa . pub


                                    Figura 3.4: Arquivos contendo as chaves
3.5 (Opcional) SSH com chave criptografada                                           25

   Deve-se então copiar sua chave pública para o servidor que deseja acessar:

    # ssh-copy-id root@192.168.0.128

   Por fim, basta realizar um acesso ssh como normalmente seria feito:

    # ssh root@192.168.0.128

Caso ao criar o par de chaves for inserido uma senha, é necessário digitar essa senha ao
realizar o acesso SSH.
Capítulo 4

Servidor DHCP

O servidor DHCP fornecerá endereços de rede válidos de forma automática para todos os
clientes (caso tenha endereço suficiente) que estejam conectados na mesma rede interna
do servidor e solicitem um ip via DHCP. Além de fornecer o endereço de rede, o DHCP
também fornece o gateway padrão, a máscara de subrede e um (ou mais) endereço DNS.


4.1       Instalando o serviço DHCP em um servidor
      Primeiramente, utilize o seguinte comando para descobrir se o serviço DHCP já se
encontra instalado em sua máquina:


    # ps aux | grep dhcpd

   Por padrão, o Rocky Linux 9 não possui o serviço DHCP instalado, portanto, a de-
pender do resultado do comando anterior, será necessário instala-lo e configura-lo manu-
almente. Para isto, basta utilizar o seguinte comando:

    # dnf install dhcp-server


4.2       Configurando o Servidor DHCP
Logo após o término da instalação, é necessário configurar o arquivo /etc/dhcp/dhcpd.conf.
Por padrão, o arquivo virá vazio ou diversas linhas importantes não estarão presentes.
Para resolver isto, deve-se copiar um arquivo de exemplo providenciado pelo próprio ser-
viço, e então realizar as alterações desejadas com base nele. Para isto, utilize o comando
abaixo:
    # cp /usr/share/doc/dhcp-server/dhcpd.conf.example
    /etc/dhcp/dhcpd.conf
4.2 Configurando o Servidor DHCP                                                      27

   É importante ressaltar que ao copiar o arquivo de configuração, o mesmo deverá ser
copiado com o nome dhcpd.conf, para que assim sobrescreva o arquivo vazio.
   Antes de iniciarmos a configuração do arquivo, comente todas as linhas que estão
descomentadas a partir da linha 27 (ver figura abaixo), pois são configurações de exemplo
que podem nos atrapalhar caso fiquem ativadas (descomentadas).

# dhcpd . conf
  2 #
  3 # Sample configuration file for ISC dhcpd
  4 #
  5
  6 # option definitions common to all supported networks ...
  7 option domain - name " example . com " ;
  8 option domain - name - servers 8.8.8.8 , 8.8.8.4;
  9
 10 default - lease - time 600;
 11 max - lease - time 7200;
 12
 13 # Use this to enble / disable dynamic dns updates globally .
 14 # ddns - update - style none ;
 15
 16 # If this DHCP server is the official DHCP server for the local
 17 # network , the authoritative directive should be uncommented .
 18 # authoritative ;
 19
 20 # Use this to send dhcp log messages to a different log file ( you also
 21 # have to hack syslog . conf to complete the redirection ).
 22 log - facility local7 ;
 23
 24 # No service will be given on this subnet , but declaring it helps the
 25 # DHCP server to understand the network topology .
 26
 27 # subnet 10.152.187.0 netmask 255.255.255.0 {
 28 # }
 29
 30 # This is a very basic subnet declaration .
 31
 32 # subnet 10.3.1.16 netmask 255.255.255.240 {
 33 #     range 10.3.1.18 10.3.1.27;
 34 #     option routers 10.3.1.17;
 35 # }
 ....


                            Figura 4.1: Linhas comentadas.
4.2 Configurando o Servidor DHCP                                                     28

    Após comentar todas as linhas a partir da linha 27, as seguintes linhas devem ser
alteradas para que o serviço DHCP possa ser executado corretamente.

     option domain-name “exemplo.com”;

    Neste exemplo, foi utilizado um nome fictício que definimos durante a instalação do
sistema para a opção domain-name.

     option domain-name-servers 8.8.8.8, 8.8.4.4

    Na seção domain-name-server (DNS), serão utilizados os endereços DNS pertencentes
ao Google.

     default-lease-time 600;

    A opção default-lease-time representa de quanto em quanto tempo (em segundos)
o servidor DHCP vai verificar se um determinado cliente ainda está conectado.Vamos
manter ela padrão.

     max-lease-time 7200;

    A opção max-lease-time representa o tempo máximo que um determinado cliente pode
ficar com aquela configuração. Também manteremos essa opção padrão.
    Descomente a opção authoritative para aumentar a segurança do servidor DHCP,
fazendo com que apenas as máquinas internas da rede possam utilizar o serviço.
    Para configurar o intervalo de endereços IP que serão repassados pelo servidor DHCP,
as seguintes linhas devem ser modificadas:

subnet 10.3.1.16 netmask 255.255.255.240 {
    range 10.3.1.18 10.3.1.27;
    option routers 10.3.1.17;
}


             Figura 4.2: Configurando o intervalo de ips do servidor DHCP.




    A opção subnet indica qual a subrede destinada ao uso de DHCP, seguido da opção
netmask que delimita a máscara de subrede utilizada nesta rede. O parametro range
indica o intervalo de endereços IP que serão sorteados e repassados para as maquinas
clientes, e por fim, o parametro option routers indica o endereço de gateway padrão
utilizado pelas máquinas clientes que optarem pelo serviço DHCP.
4.2 Configurando o Servidor DHCP                                                       29

4.2.1       Configurando IP Fixo via DHCP
É possível também configurar um endereço IP fixo para uma determinada máquina da
subrede. Para isso, deve-se adicionar as seguintes configurações dentro de uma faixa de
ip’s previamente configuradas:

subnet 10.3.1.16 netmask 255.255.255.240 {
    range 10.3.1.18 10.3.1.27;
    option routers 10.3.1.17;


    host cliente {
          hardware ethernet 08:00:27:54:18:6 f ;
          fixed - address 10.3.1.28;
    }
}


                 Figura 4.3: Configurando um IP fixo no servidor DHCP.

    A opção host indica o apelido que será dado à maquina a ser configurada, seguido
da opção hardware ethernet que é dado pelo endereço MAC da máquina desejada, e
por fim, o parametro fixed-address que indica o endereço de IP que será fixado nesta
máquina cliente.


4.2.2       Ativando o servidor DHCP
Por fim, para garantir o funcionamento deste serviço, a cada alteração feita no arquivo
de configuração, deve-se reiniciar o serviço DHCP aplicando os seguintes comandos, na
ordem demonstrada:

        # systemctl stop dhcpd

        # systemctl start dhcpd




    Como última configuração necessária, deve-se aplicar o comando abaixo para certificar-
se que serviço DHCP irá iniciar junto ao sistema.

        # systemctl enable dhcpd
Capítulo 5

Squid

Squid é um servidor de proxy (serviço com funcionamento semelhante a um despachante
de páginas web) que suporta HTTP, HTTPS, FTP, etc. Ele reduz a utilização dos recursos
de rede e melhora os tempos de resposta fazendo cache de requisições frequentes.


5.1      Instalando o Squid
Para instalar o seviço Squid deve-se utilizar o comando:

     # dnf install squid


5.2      Configurando o Servidor Squid
    Para iniciar a configuração do servidor de proxy Squid é necessário copiar o arquivo lo-
calizado em /usr/share/doc/squid/squid.conf.documented para /etc/squid/squid.conf,
sobrescrevendo o arquivo squid.conf.
    Após a cópia, o arquivo squid.conf está pronto para ser configurado. A configuração
de quais conteúdos devem ser filtrados pelo proxy deve ser feita por meio de uma ACL
(Access Controll List), ou seja, uma lista de controle de acessos.
    Para se definir uma ACL basta inserir no arquivo a seguinte linha:

     acl redelocal src 192.168.0.106/24

.
5.3 Iniciando o serviço e configurando cliente                                          31

   Toda acl deve ser criada seguindo a seguinte regra:

   • 1° campo = acl

   • 2° campo = nome da acl

   • 3° campo = tipo da acl (em alguns casos, pode ser opcional)

   • 4° campo = parâmetro, o qual deve estar de acordo com o tipo definido pelo terceiro
      campo.

   Neste exemplo, a ACL criada possui o nome redelocal, e sua fonte/origem é a rede
192.168.0.106/24.
   É importante comentar todas as outras ACLs que se encontram no arquivo por padrão,
ou seja, que não foram definidas pelo usuário, para evitar conflitos posteriores.
   Estando definida uma ACL, deve-se definir qual regra ela irá seguir. Neste exemplo, o
acesso a rede será liberado à ACL redelocal, o que pode ser feito ao se inserir no arquivo,
na seção adequada, a seguinte linha:

    http_access allow redelocal

   É considerado uma boa prática de segurança sempre inserir a seguinte linha, após
todas as outras linhas de permissões de ACL, pois garante que somente terá acessoa rede
quem se encontra nas ACLs permitidas.

    http_access deny all

   É importante notar que, tendo em vista o modo como o serviço Squid funciona, é
imperativo ter sempre em mente a ordem na qual são garantidas as permissões a cada
ACL. Isto deve-se ao fato de que uma permissão garantida a uma ACL não pode ser
sobrescrita nenhuma regra inserida posteriormente.
   Por exemplo, a ACL rede local tem permissão de acesso à rede. A regra inserida
logo após essa permissão (http_access deny all) nega o acesso a todos os usuários, po-
rém, não irá negar o acesso à ACL redelocal, pois sua permissão de acesso foi garantida
anteriormente à esta regra.


5.3     Iniciando o serviço e configurando cliente
Para iniciar o serviço, deve-se utilizar o comando:

    # systemctl start squid
5.4 Criando ACLs específicas                                                           32

   Após, utilize o comando a seguir para habilitar a inicialização do servidor proxy Squid
juntamente ao boot da máquina servidora:

    # systemctl enable squid

   Para se testar a funcionalidade deste serviço, em uma máquina cliente, utilizando o
navegador Mozilla Firefox por questões de facilidade de uso, deve-se configurar o proxy
(NO NAVEGADOR) com o IP da máquian servidora e porta 3128, que é a porta padrão
utilizada pelo serviço Squid.
   É importante recordar que o serviço deve ser reinicializado toda vez que for realizada
alguma alteração, utilizando o comando:

    # squid -k reconfigure

   Não é recomendado utilizar o comandos systemctl stop squid e systemctl start
squid para a reinicialização devido à lentidão de sua execução.


5.4       Criando ACLs específicas
É possível criar ACLs que permitem o bloqueio ou a liberação de IPs, faixas de IPs, redes
e sites, seja por tempo determinado ou indeterminado.


5.4.1     Bloqueando máquinas ou redes
Para bloquear uma máquina ou rede, deve-se criar uma ACL onde é indicado qual IP ou
rede deve ser bloqueada.

    acl maquina1 src 192.168.0.200/24

    acl bancada1 src 192.168.0.200/24

   Para bloquear requisições provenientes destas origens, deve-se adicionar as seguintes
linhas:

    http_access deny maquina1

    http_access deny bancada1
5.4 Criando ACLs específicas                                                         33

5.4.2    Utilizando intervalos de tempo
É possível criar ACLs que irão limitar acesso baseado em tempo. Para isso utilize a
seguinte sintaxe de ACL:

    acl intervalo time 12:00-14:00

   Nesta ACL, o acesso pode ser bloqueado ou permitido durante o intervalo entre 12
horas e 14 horas.


5.4.3    Bloqueando domínios
Para limitar o acesso a domínios é possível utilizar dois tipos de ACL:

acl terra dst www . terra . com . br
act terra2 dstdomain www . terrra . com . br


                              Figura 5.1: Acl’s de dominios.

   Na ACL terra, está sendo definido o dominio com destino www.terra.com.br, porém
isso não engloba limitando todo o domínio, ou seja, www.terra.com.br/noticias não está
incluído. Já em terra2 está sendo limitado todo o domínio www.terra.com.br.


5.4.4    Utilizando expressões regulares
Para utilizar uma verificação via expressão regular pode-se utilizar dois tipos de ACL
como demonstrado abaixo:

acl terra3 url_regex -i terra
acl terra4 dstdom_regex -i terra


                               Figura 5.2: Acl’s com regex.

   Ambos possuem um funcionamento similar, porém será empregado o uso de dstdom_regex,
pois é uma expressão regular mais restritiva e evita falsos positivos.
   Uma boa prática na criação ACLs para sites ou expressões regulares é agrupa-los em
um arquivo externo posteriormente referenciando este arquivo nas configurações do Squid.
   Por exemplo, foi criado o arquivo sites.txt em /etc/squid/ com o seguinte con-
teúdo.
   No arquivo de configuração, deve-se criar a seguinte ACL:

    acl proibidos dstdom_regex - i "/etc/squid/sites.txt"
5.5 Squid com Autenticação                                                             34


www . uol . com . br
www . globo . com . br
www . terra . com . br


                              Figura 5.3: Urls para bloqueios.

   Com isso, todos nossos sites estão agrupados em somente uma localidade e somente
uma ACL referenciando todos.
   No exemplo foram citados apenas sites, mas é possível bloquear palavras e até mesmo
extensões de arquivos desde que a conexão não seja criptografada.


5.5      Squid com Autenticação
O Squid possui a opção de criar autenticações para limitar os acessos a determinados sites
para que assim seja facilitada a administração dos acessos de modo a deixar que apenas
alguns usuários realizem os acessos.
   Para isso deve-se adicionar as seguintes linhas no arquivo de configuração do Squid:

auth_param basic realm Acesso Restrito
auth_param basic program / usr / lib64 / squid / basic_ncsa_auth
        / etc / squid / senhas . txt


                             Figura 5.4: Atenticações com ACL.


   • auth_param basic realm: Aqui é definida a mensagem que será apresentada ao
      usuário ao tentar fazer o acesso.

   • auth_param basic program: Aqui é definido qual programa irá fazer a autencicação
      de usuários, neste caso é utilizado o ncsa_auth, e um arquivo de senhas.

   Deve-se também adicionar uma ACL referente à autenticação:

     acl autenticados proxy_auth REQUIRED

   Em seguida deve-se aplicar as regras de acesso utilizando a nova ACL. No caso será
liberado o acesso somente para os autorizados.

     http_access allow autenticados
5.5 Squid com Autenticação                                                           35

5.5.1    Criando o arquivo de senhas
Ao criar o arquivo de senhas, é interessante que a senha de cada usuário esteja cripto-
grafada (e.g.:/etc/shadow), para realizar isso será utilizado o programa htpasswd, que
está no pacote httpd-tools.
   Inicialmente iremos instalar o pacote httpd-tools utilizando o comando:

    # dnf install httpd-tools

   Após a instalação do httpd-tools iremos criar nosso arquivo senhas.txt em /etc/squid
e para isso podemos utilizar o próprio comando:

    # htpasswd -c /etc/squid/senhas.txt didi

    # htpasswd -c /etc/squid/senhas.txt dede

   Após inserir este comando um prompt será aberto perguntando qual será a senha do
usuário didi/dede. Após confirmado a senha o usuário didi será inserido em senhas.txt.
   Faça o mesmo para todos os usários na qual deseja criar.
   É possível verificar se o arquivo senhas.txt foi criado corretamente utilizando o co-
mando:

    # /usr/lib64/squid/basic_ncsa_auth /etc/squid/senhas.txt

   Ele irá retornar OK caso o conteúdo do arquivo esteja correto e ERR caso algum erro
tenha ocorrido no processo de criação.
   Por fim digite:

    # squid -k reconfigure

   Agora quando o cliente abrir o browser irá aparecer uma janela de autenticação, no
qual digitaremos o login e senha.


5.5.2    Criando ACL de autenticação específica para usuários
Agora iremos criar ACLs específicas para cada usuário cadastrado anteriormente. Para
isso podemos simplesmente adicionar as linhas:
   Com base em nossas ACLs podemos criar nossas restrições de acesso:
   No caso, estamos bloqueando acesso ao usuário didi, liberando somente acesso ao site
do terra para dede e liberando acesso para todos os outros usuários.
   Por fim digite:

    # squid -k reconfigure
5.6 Regras de iptables de proxy manual                                              36


acl usuario_didi proxy_auth didi
acl usuario_dede proxy_auth dede
acl acessa_terra dstdom_regex -i terra . com . br


                            Figura 5.5: Acl’s para usuario.

http_access deny didi
http_access deny dede ! acessa_terra
http_access allow autenticados


                      Figura 5.6: Restrições para as acl’s criadas.

5.6      Regras de iptables de proxy manual
Para forçar que o cliente navegue obrigatoriamente com proxy usaremos duas regras de
iptables:

    # iptables -A FORWARD -i eth1 -p tcp –dport 80 -j DROP

    # iptables -A FORWARD -i eth1 -p tcp –dport 443 -j DROP

   Por fim digite:

    # squid -k reconfigure


5.7      Configurando Cache
Para que as requisições de acesso de um usuário seja feitas de maneira mais rápida, é
recomendave configuar o serviço Squid para que este seja capaz de criar e utilizar um
cache.
   No arquivo de configurações do squid, deve-se alterar as seguintes linhas, de acordo
com as necessidaes de cada servidor:

    cache_mem 265 MB

   Esta linha define a quantidade de memória RAM que o serviço ira reservar para cache.

    maximum_object_size_in_memory 512 KB

Esta linha define a o tamanho máximo de memória RAM que pode ser gasto por cada
item salvo.

    cache_dir ufs /var/spool/squid 100 16 256
5.7 Configurando Cache                                                                37

   Nesta linha, o primeiro parâmetro representa o diretório no qual o squid vai armazenar
os arquivos de cache, o segundo representa a quantidade de espaço em disco utilizada pelo
cache e os dois últimos são os números de pastas e subpastas.

    minimum_object_size 1 MB

Esta linha define o tamanho minimo de memória em Disco que deve ser gasto por cada
item salvo.

    maximum_object_size 10 MB

Esta linha define o tamanho máximo de memória em Disco que pode ser gasto por cada
item salvo.

    cache_swap_high 95

Esta linha define a partir de qual porcentagem de ocupação da memória, o cache deverá
ser esvaziado.

    cache_swap_low 70

Esta linha define o limite de esvaziamento de da memória, quando o cache começar a
descartar arquivos.
   Após terminadas as configurações, deve-se SEMPRE reinicializar o serviço, utilizando
o seguinte comando:

    # squid -k reconfigure
Capítulo 6

Servidor de Nomes (DNS)

6.1     Introdução
Uma parte importante na configuração do servidor e na infraestrutura inclui manter uma
maneira fácil de procurar interfaces de rede e endereços IP por nome, através da criação de
um bom Domain Name System (DNS). O uso de nomes de domínio totalmente qualificados
(FQDNs), em vez de endereços IP, para especificar endereços de rede facilita a configuração
de serviços e aplicações. Configurar o seu próprio DNS para a sua rede privada é uma
ótima maneira de melhorar a gestão dos seus servidores.
   Neste tutorial, ensina-se sobre como configurar um servidor DNS interno, utilizando o
software de servidor de nomes BIND (BIND9) no Rocky Linux 9, que pode ser usado por
seus Virtual Private Servers (VPS). Isso fornece uma maneira central para gerenciar nomes
de hosts internos e endereços IP privados, o que é indispensável quando um ambiente se
expande para mais do que alguns hosts.


6.2     Instalação
Inicialmente precisa-se instalar o BIND no servidor DNS. Para isso instale o bind e o
bind-utils.

    # dnf install bind bind-utils

   Com isso pode-se inicializar o servidor DNS:

    # systemctl start named

    # systemctl enable named
6.3 Configurando o Bind                                                               39

    E para testá-lo:

      # dig terra.com.br @127.0.0.1

    No windows, utilize o comando:

      nslookup terra.com.br


6.3        Configurando o Bind
No Rocky Linux 9 o processo BIND é conhecido como named. Com isso o bind sera
referenciado como named em diversos momentos do relatório.
    Vamos começar com o NS1. Abra o arquivo /etc/named.conf.


6.3.1      Liberando acesso ao servidor DNS
Inicialmente o servidor DNS vem configurado para somente receber requisições locais,
porém precisa-se que ele responda as máquinas presentes na rede. Para isso altere o bloco
options.

options {
      listen - on port 53 { any ; };
      listen - on - v6 port 53 { ::1; };
      directory       " / var / named " ;
      dump - file     " / var / named / data / cache_dump . db " ;
      statistics - file " / var / named / data / named_stats . txt " ;
      memstatistics - file " / var / named / data / named_mem_stats . txt " ;
      allow - query        { any ; };
}
...


                               Figura 6.1: Acesso ao servidor DNS.

    Os parâmetros listen-on e allow-query foram alterados. Em listen-on foi adicionado o
parâmetro any, que significa que o servidor DNS pode escutar em qualquer interface de
rede. E em allow-query também foi adicionado o parâmetro any, que diz que qualquer ip
pode realizar consultas no servidor DNS.
    OBS: Caso deseje limitar o dns para rede interna, adicione o ip da interface interna
como parâmetro do listen-on, e caso deseje limitar a consulta do DNS para um ip especí-
fico, altere o parâmetro allow-query e adicione um ip válido.
6.4 Configurando arquivo local (zonas)                                                  40

6.3.2      Incluindo diretório de zonas
No final do arquivo de configuração adicione a seguinte linha:

      include "/etc/named/mynamed.conf";

     Com isso o arquivo mynamed.conf esta sendo incluido no arquivo principal de configu-
ração do DNS. Assim, separando as configurações de zonas internas do arquivo principal.


6.4       Configurando arquivo local (zonas)
Agora as zonas locais serão configuradas, as zonas são os endereços na qual o servidor
DNS irá responder.
     Comece criando o arquivo mynamed.conf. Para isso, digite:

      # vim /etc/named/mynamed.conf

     É nesse arquivo que as zonas de encaminhamento e reverso serão configurados. Comece
criando uma zona chamada truco.com.br:

zone " truco . com . br " {
     type master ;
     file " / var / named / data / truco . com . br . conf " ;
     allow - update { none ; };
};


                          Figura 6.2: Configuração de zonas do DNS.

     O parâmetro type indica qual o tipo da zona (master ou slave), o parâmetro file indica
onde está localizado o arquivo de configuração dessa zona e por último, o parâmetro
allow-update indica qual outro servidor pode atualizar o arquivo de configuração da zona.
     Após criar o arquivo, mude o grupo do mesmo para named para que o servidor DNS
tenha permissão para ler esse arquivo.

      # chown :named mynamed.conf


6.4.1      Configurando zonas de encaminhamento
Nos arquivos de encaminhamento de zona é definido os DNS Records que serão encaminha-
dos para os DNS Lookups quando há pesquisas. Desta forma quando o DNS receber uma
query "truco.com.br" por exemplo, ele irá procurar pelo arquivo de encaminhamento
referente a esta zona e resolverá a resposta passando o IP referente ao mesmo.
6.4 Configurando arquivo local (zonas)                                                41

    Antes de criar o arquivo de encaminhamento da zona, navegue até o diretório /var/-
named e adicione o SGID ao diretório data, para que todos os arquivos criados dentro
dessa pasta tenham o mesmo grupo deste diretório (no caso, o grupo named).

      # chmod g+s data

    Agora copie o arquivo named.localhost localizado em /var/named/ para /var/na-
med/data já renomeando para truco.com.br.conf.

      # cp /var/named/named.localhost /var/named/data/truco.com.br.conf

    O conteúdo do arquivo modificado será o seguinte:

$TTL 1 D
@     IN SOA @ admin . truco . com . br . (
                      2022120401       ; serial
                      1 D ; refresh
                      1 H ; retry
                      1 W ; expire
                      3H )     ; minimum



              NS         ns1
              MX   10    mail
              A          192.168.0.107
ns1           A          192.168.0.107
mail          A          192.168.0.107
baralho       A          192.168.0.107
www           CNAME          baralho
ftp           CNAME          baralho


                         Figura 6.3: Zonas de Encaminhamento DNS.

    Significado de cada linha do arquivo:

    • $TTL 1D: O tempo que um servidor DNS irá armazenar as configurações deste
       arquivo em cache após realizar uma consulta (ao configurar um novo servidor DNS,
       interessante colocar um tempo mais baixo para verificar alterações).

    • @ IN SOA admin.truco.com.br. (: O @ presente em vários locais desse arquivo
       sempre se refere a zona na qual ele é responsável (nesse caso, truco.com.br). O IN
       SOA significa o início de uma autoridade, portanto tudo que estiver abaixo dela,
       representa o domínio trucos.com.br. O admin.truco.com.br. (lembre-se de adicionar
6.4 Configurando arquivo local (zonas)                                                   42

    sempre um ponto no final de um domínio dentro desse arquivo, pois caso contrário
    ele completará com o domínio dessa zona) representa o email do responsável por
    essa zona (o primeiro ponto representa um arroba já que o @ tem outro significado
    dentre desse arquivo).

  • 2022120401 ; serial: Representa o número de série do arquivo (o número pode ser
    qualquer um desde que a versão mais recente seja superior a versão anterior. Essa
    formatação indica a data e a quantidade de alterações por dia), é importante para
    sincronização entre master e slave, pois sempre que o slave quiser sincronizar, ele vai
    olhar o número de série do arquivo e verificar se é mais recente, caso seja ele atualiza
    as configurações. Por isso é muito importante lembrar de alterar esse número de
    série ao realizar qualquer alteração no arquivo.

  • 1D ; refresh: De quanto em quanto tempo um slave vai verificar se possui alguma
    alteração no arquivo fornecido pelo master.

  • 1H ; retry: Caso a verificação falhe por algum motivo, esse será o tempo que o slave
    levará para realizar uma nova tentativa de verificação.

  • 1W ; expire: Caso o slave não consiga realizar essa sincronização, esse será o tempo
    que o slave continuará funcionando com a última configuração que ele obteve do
    master e após esse tempo o arquivo expirará e o slave parará de responder.

  • 3H ) ; minimum: Caso o master pare de funcionar e depois de um tempo retorne a
    funcionar, esse será o tempo que o slave demorará para confiar no master novamente.

  • NS ns1: Obs: Quando houver um espaço no início da linha nesta parte, é como se
    tivesse um @. Essa linha representa qual nome do servidor de nomes desse domínio.

  • MX 10 mail: Entrada do nome da máquina que responde por um servidor de email.
    O número 10 representa a prioridade desse servidor de email (Quanto menor o
    número, maior a prioridade).

  • A 192.168.0.107: Dizendo que uma máquina pode responder diretamente pelo do-
    mínio. Por exemplo: ao acessar o domínio pelo navegador, pode-se acessar usando
    apenas truco.com.br ao invés de www.truco.com.br.

  • ns1 A 192.168.0.107: Definindo qual o IP da máquina de servidor de nomes ns1.

  • mail A 192.168.0.107: Definindo qual o IP da máquina de email.

  • baralho A 192.168.0.107: Definindo qual o IP da máquina que responde pelo nome
    baralho.
6.4 Configurando arquivo local (zonas)                                               43

     • www CNAME baralho: Ao invés de utilizar um número de IP todo momento, pode-
       se utilizar a diretiva CNAME, indicando que o nome é um apelido. Nesse caso a
       máquina www é um apelido para baralho.

     • ftp CNAME baralho: A máquina ftp é um apelido para baralho.

     Após essas configurações, reinicie o serviço.

      # systemctl stop named.service

      # systemctl start named.service

     Agora, teste a zona criada:

      # dig truco.com.br @127.0.0.1

     Para que não seja necessário especificar um servidor DNS é necessário alterar o DNS
do sistema. Para isso digite os seguintes comandos:

      # nmcli connection modify $PLACAEXTERNA ipv4.dns 127.0.0.1

      # nmcli connection up $PLACAEXTERNA


6.4.2      Configurando DNS reverso
Um DNS reverso é necessário quando a informação requisitada para o servidor não for
um nome e sim o IP. Desta forma pode-se traduzir um endereço de IP para um nome e
enviar como resposta o domínio referente ao IP informado.
     Primeiramente adicione a seguinte entrada no arquivo mynamed.conf.

zone " 0.168.192. in - addr . arpa " IN {
           type master ;
           file " / var / named / data /0.168.192. in - addr . arpa . conf " ;
           allow - update { none ; };
};


                         Figura 6.4: Configuração do DNS reverso.

     Considerando que nossa rede é 192.168.0.0/24 vamos adicionar somente os octetos na
qual fazerem parte da rede e invertê-los. Como resultado temos 0.168.192.in-addr.arpa.
     Agora para criar o arquivo de configuração da zona, copie o arquivo de configuração
anteriormente criado e modifique o nome para 0.168.192.in-addr.arpa.conf.
6.5 Verificando configuração                                                             44

      # cp truco.com.br.conf 0.168.192.in-addr.arpa.conf

    O conteúdo deste arquivo será bem similar ao anterior, porém o parâmetro PTR será
utilizado para referenciar nossos hosts conforme a figura abaixo.




$TTL 1 D
@     IN SOA @ admin . truco . com . br . (
                       2022120401      ; serial
                       1 D ; refresh
                       1 H ; retry
                       1 W ; expire
                       3H )   ; minimum
         NS      ns1
ns1      A       192.168.0.107
107      PTR     mail . truco . com . br .


                       Figura 6.5: Configuração arquivo do DNS reverso.

    Importante notar que o PTR referencia somente o valor 107. Considerando que nossa
rede é 192.168.0/24 e o ns1 possui o IP 192.168.0.107 somente o último octeto sera utilizado
para esta referência.
    Agora reinicie o servidor DNS:

      # systemctl stop named

      # systemctl start named

    Para testar o DNS reverso:

      # dig -x 192.168.0.107 @127.0.0.1


6.5       Verificando configuração
Para verificar as configurações estão corretas utilize o seguinte comando:

      # named-checkconf

    Caso não haja nenhum erro nenhuma mensagem será retornada.
    Para verificar as configurações de uma zona utilize o seguinte comando:

      # sudo named-checkzone $NOMEDAZONA $ARQUIVOCONFDAZONA
6.6 Configurando slave                                                                45

6.6      Configurando slave
Primeiramente habilite a transferência no servidor Master. Para isso edite o arquivo
/etc/named/mynamed.conf

     # vim /etc/named/mynamed.conf

     Adicione o paramêtro com o seguinte ip (maquina servidora secundária) nas zonas
truco.com.br e na zona reversa:

     allow-transfer       192.168.0.128; ;

     Este parâmetro habilitando a transferência do arquivo de configuração desse servidor
master para o slave localizado em 192.168.0.128. Com isso teremos:

zone " truco . com . br " {
           type master ;
           file " / var / named / data / truco . com . br . conf " ;
           allow - update { none ; };
           allow - transfer { 192.168.0.128; };
};


zone " 0.168.192. in - addr . arpa " IN {
           type master ;
           file " / var / named / data /0.168.192. in - addr . arpa . conf " ;
           allow - update { none ; };
           allow - transfer { 192.168.0.128; };
};


                              Figura 6.6: Arquivo mynamed.conf.
6.6 Configurando slave                                                                 46

     Em seguida, na máquina slave, altere o arquivo /etc/named/mynamed.conf da mesma
forma que foi alterado no servidor master.

options {
      listen - on port 53 { any ; };
      listen - on - v6 port 53 { ::1; };
      directory       " / var / named " ;
      dump - file     " / var / named / data / cache_dump . db " ;
      statistics - file " / var / named / data / named_stats . txt " ;
      memstatistics - file " / var / named / data / named_mem_stats . txt " ;
      allow - query        { any ; };
}
...


                                  Figura 6.7: Configurando slave.

     Também adicione a linha contendo o include no final do arquivo.

      include "/etc/named/mynamed.conf";

     Por fim, adicione as zonas que serão recebidas do master no arquivo /etc/named/mynamed.conf
da seguinte forma:

zone " truco . com . br " IN {
            type slave ;
            file " / var / named / slaves / truco . com . br . conf " ;
            masters { 192.168.0.107; };
};


zone " 0.168.192. in - addr . arpa " IN {
            type slave ;
            file " / var / named / slaves /0.168.192. in - addr . arpa . conf " ;
            masters { 192.168.0.107; };
};


                                      Figura 6.8: Zonas slave.

     Após finalizar a configuração do arquivo mynamed.conf do slave, inicie o servidor DNS
que receberá os arquivos de configuração do master.

      # systemctl start named

     Verifique se os arquivos de configuração estão no diretório especificado:

      # ls -l /var/named/slaves
6.6 Configurando slave                                                             47

   Caso os arquivos estejam presentes, verifique se o dono e o grupo dos arquivos é o
usuário named e se o usuário named tem permissão de escrita e leitura nesses arquivos.
Se nenhuma das condições anteriores for satisfeita, basta mudar o dono e grupo dos
arquivos e alterar suas permissões:

    # chown named:named /var/named/slaves/*

    # chmod 644 /var/named/slaves/*

   Por fim, realize uma consulta utilizando o servidor DNS do slave e verifique se ele
responde da mesma forma que o master.

    # dig truco.com.br @192.168.0.128
Capítulo 7

Servidor HTTP Apache

   O serviço denominado Apache, cujo nome oficial é Apache HTTP Server, é um servidor
web de código aberto, criado em 1995 pela Apache Software Foundation.
   Desde sua concepção até o período atual alcançou muita fama, estando atualmente
presente na hospedagem de cerca de 46% dos sites da internet(HOSTINGER TUTORI-
AIS, 2022), além de ser utilizado por empresas notáveis no mercado de tecnologia, tais
como Cisco, Adobe, VMware, Xerox, LinkedIn, Facebook / Meta, AT&T, dentre diversas
outras(KINSTA, 2021).
   Sua principal função é atender a requisições geradas por usuários através da rede,
armazenando, processando, e entregando a eles desde dados, a até informações e mesmo
páginas web.


7.1     Instalação
Para realizar a instalação deste serviço, basta executar o comando:

    # dnf install httpd



   Em seguida, deve-se iniciá-lo, e então habilitar sua execução durante a inicialização
do sistema. Para isso deve-se executar os seguintes comandos, na seguinte ordem:

    # systemctl start httpd

    # systemctl enable httpd
7.2 Configurações gerais                                                              49

   Após iniciado o serviço, torna-se possível realizar testes com o Apache dentro da rede
local. Para isso basta digitar na barra de endereço do browser o endereço IP da máquina
servidora e apertar a tecla ENTER. Como ainda não foram feitas configurações no serviço,
aparecerá uma página padrão de testes do Apache.




                      Figura 7.1: Página de teste do serviço HTTP




7.2     Configurações gerais
   Primeiramente, antes mesmo da criação de qualquer página web para o servidor, deve-
se abrir o arquivo localizado em /etc/httpd/conf/httpd.conf. Este arquivo possui configu-
rações importantes, as quais irão afetar o web server como um todo.
   A seguir são apresentados alguns parâmetros presentes neste arquivo que podem ser
alterados caso o gerenciador do web server deseje, porém, para o escopo deste relatório,
os valores padrões seguirão inalterados.
7.2 Configurações gerais                                                            50

  • ServerRoot: Nesta linha se encontra o caminho para o arquivo contendo as configu-
    rações do servidor apache;


      ServerRoot "/etc/httpd"



  • Listen: Porta utilizada pelo servidor apache para "escutar"requisições. Por padrão,
    utiliza a porta 80. Há também uma configuração mais restritiva que utiliza um
    endereço de IP juntamente à porta, como exemplificado no próprio arquivo;


      Listen 80


      Listen 12.34.56.78:80



  • User: Usuário que estã sendo utilizado pelo servidor apache para realizar suas fun-
    ções;


      User apache



  • Group: Grupo ao qual o servidor apache pertence;


      Group apache



  • DocumentRoot: Nesta linha se encontra o caminho para o diretório que contém as
    páginas que serão hospedadas pelo serviço;


      DocumentRoot "/var/www/html"



  • ScriptAlias: Esta linha indica o caminho para o diretório no qual serão hospedadas
    arquivos de script dasweb pages;


      ScriptAlias /cgi-bin/ "/var/www/cgi-bin/"
7.2 Configurações gerais                                                              51

   • ErrorDocument: Por fim, esta(s) linha(s) permite(m) que o gerenciador forneça
     mensagens e/ou páginas personalizadas para as situações em que um erro ocorra ao
     exibir certa página.

ErrorDocument 500 " O ␣ servidor ␣ parou ␣ de ␣ funcionar . "
ErrorDocument 404 / missing . html
ErrorDocument 404 " / cgi - bin / missing_handler . pl "
ErrorDocument 402 http :// www . example . com / subscriptioninfo . html


            Figura 7.2: Exemplos de mensagens e páginas de erros personalizadas


   Caso qualquer alteração tenha sido feita, é importante lembrar-se de reinicializar o
serviço, para que as mudanças tenham efeito, o que pode ser feito aplicando os seguintes
comandos na sequência demonstrada:

    systemctl stop httpd

    systemctl start httpd


7.2.1       Configurando a página inicial
   É importante criar uma página inicial personalizada, mesmo que contenha apenas
texto, pois a página teste exibida pelo apache pode apresentar um risco à segurança do
servidor.
   Para isso, deve-se primeiramente criar um arquivo denominado index.html dentro do
diretório /var/www/html.
   Tendo sido criado o arquivo índice, e tendo o mesmo sido preenchido, mesmo que com
apenas texto, deve-se agora abrir o arquivo localizado em /etc/httpd/conf.d/welcome.conf
e comentar todas as linhas do arquivo.
   Deve-se notar que, caso seja feita a alteração citada acima no arquivo welcome.conf, é
possível também criar uma página inicial sem o uso de um arquivo index.html, necessitando
apenas da criação de um diretório dentro do diretório /var/www/html.
   É importante lembrar que qualquer alteração em qualquer arquivo "conf"presente no
diretório httpd requer a reinicialização do serviço.
7.2 Configurações gerais                                                            52




      Figura 7.3: Página inicial do servidor baseada na estrutura de diretórios 1




      Figura 7.4: Página inicial do servidor baseada na estrutura de diretórios 2
7.2 Configurações gerais                                                                 53

7.2.2       Configurando VirtualHosts
      Virtual Host é uma técnica utilizada pelo servidor Apache para permitir que um unico
servidor seja capaz de hospedar multiplos sites e aplicações web. Usando Virtual Hosts
torna-se possível especificar uma configuração dedicada para cada site.
      Apesar de ser possível configurar Virtual Hosts dentro do arquivo de configurações
gerails (/etc/httpd/conf.d/httpd.conf ), é considerado boa prática modularizar o processo,
ou seja, criar um arquivo para cada Virtual Host dentro do diretório /etc/httpd/conf.d.
      Para iniciar o processo de criação de um virtual host, crie um arquivo com a extensão
".conf"como demonstrado a seguir:

       # vim truco.com.br.conf

      Dentro do arquivo, inicia-se o processo utilizando a diretiva VirtualHost, da seguinte
forma:

< VirtualHost *:80 >


</ VirtualHost >


                       Figura 7.5: Modo de uso da diretiva VirtualHost.

      Dessa forma, está sendo criado um virtual host que irá "escutar"requisições na porta
80. O asterisco indica que este virtual host pode receber requisições de qualquer endereço
IP.
      Em seguida, deve-se adicionar ao Virtual Host as configurações mínimas necessárias
para o funcionamento correto, sendo elas ServerName, que indica por qual nome esta
página ou aplicação irá atender, e DocumentRoot, que indica o caminho até a pasta
contendo os conteúdos desta página ou aplicação.

< VirtualHost *:80 >


      ServerName www . truco . com . br


      DocumentRoot " / var / www / html / truco . com . br / "


</ VirtualHost >


           Figura 7.6: VirtualHost contendo as configurações mínimas necessárias.
7.2 Configurações gerais                                                             54

   Caso o diretório especificado em DocumentRoot não existir, ele deve ser criado.
   Para este exemplo, utilizando o domínio truco.com.br criado na seção DNS, o comando
seria:

     # mkdir /var/www/html/truco.com.br

   O diretório /var/www/html é o local ao qual é adicionado o conteúdo dos sites que
serão hospedados (HTML, PHP, etc.).
   Ainda há várias outras opções que podem ser adicionadas à diretiva VirtualHost, caso
seja desejavel para o gerenciador do servidor, tais como:

< VirtualHost *:80 >


    ServerName www . truco . com . br
    ServerAdmin " truco@gmail . com "
    ServerAlias truco . com . br
    DocumentRoot " / var / www / html / truco . com . br / "
    ErrorDocument 404 " <h1 > ␣ Pagina ␣ nao ␣ encontrada ␣ </ h1 > "
    Customlog " logs / access - truco . com . br_log " combined
    Errorlog " logs / error - truco . com . br_log " combined


</ VirtualHost >


                               Figura 7.7: Configurações extras


   • Server Admin consiste em uma forma de identificação quanto ao gerenciador do
         servidor;

   • Server Alias é um nome alternativo para o servidor, neste caso, permitindo que o
         site truco.com.br seja acessado sem a necessidade de digitar www ;

   • ErrorDocument permite que o gerenciador especifique o que deve ser exibido perante
         a um determinado erro. Neste caso, uma mensagem é exibida em caso de um erro
         404.

   • CustomLog e ErrorLog geram arquivos personalizados de, respectivamente, acessos
         e erros.
7.2 Configurações gerais                                                                 55

   Caso o servidor possua diversas páginas, é interessante criar também um arquivo
denominado 000-default.conf, para agir como a página default do servidor, devendo possuir
as seguintes configurações:

< VirtualHost *:80 >


    ServerName " www . meuprovedor . com . br "


    DocumentRoot " / var / www / html "


</ VirtualHost >


                           Figura 7.8: Arquivo 000-default.conf.

   Finalizadas as configurações de VirtualHost, é interessante para o gerenciador do servi-
dor especificar alguns parâmetros de segurança ao diretório raiz de cada sire, para proteger
a integridade dos dados de seu servidor HTTP. Para isso, utiliza-se a diretiva Directory,
da seguinte forma:

< VirtualHost *:80 >


    ServerName www . truco . com . br
    ServerAdmin " truco@gmail . com "
    ServerAlias truco . com . br
    DocumentRoot " / var / www / html / truco . com . br / "
    ErrorDocument 404 " <h1 > Pagina ␣ nao ␣ encontrada </ h1 > "
    Customlog " logs / access - truco . com . br_log " combined
    Errorlog " logs / error - truco . com . br_log " combined


   < Directory " / var / www . html / truco . com . br / " >
        Options - Indexes
        AllowOverride all
        Require all granted
    </ Directory >



</ VirtualHost >


                           Figura 7.9: Diretiva directory básica.


   • Directory é a diretiva onde são especificadas as permissões e configurações referentes
      a um determinado diretório.
7.3 Habilitando suporte ao PHP                                                            56

     • Options é o campo no qual se especifica como nosso diretório irá listar os arquivos
       que o mesmo contem. Podem ser utilizadas as opções: +Indexes (Exibe o conteúdo)
       ou -Indexes (Não exibe o conteúdo)

     • AllowOverride permite o uso do arquivo .htaccess. Caso seu valor seja all, o uso
       está sendo permitido.Utiliza-se o valor none para negar o uso.

     • Require fornece permissões de acesso a um diretório. Caso seu parâmetro seja all
       granted, todos os IPs podem acessar o diretório. Caso seja all denied, o acesso àquele
       diretório será negado a todos os IPs.

     Por fim, para tornar possível o acesso por máquinas de redes externas é imperativo que
se crie uma zona no arquivo de configuração de zonas DNS, como demonstrado abaixo:

zone " truco . com . br " IN {
     type master ;
     file " / var / named / data / truco . com . br . conf " ;
     allow - update { none ; };
};


                     Figura 7.10: Configuração básica de uma zona DNS.




7.3       Habilitando suporte ao PHP
Muitas aplicações atuais utilizam a linguágen PHP para desenvolvimento. Essa lingua-
gem necessita de um servidor web para realizar suas funções, e, para ativar esse suporte
ao servidor Apache, deve-se realizar o download do pacote PHP, utilizando o seguinte
comando:

      # dnf install php

     Os módulos necessários para o funcionamento do PHP serão automaticamente adici-
onados aos diretórios de configuração do servidor Apache. Ainda é necessário, porém,
reinicializar o serviço Apache para que seu uso seja plenamente disponibilizado, podendo
ser feito com os seguintes comandos:

      # systemctl stop httpd

      # systemctl start httpd
7.4 Habilitando HTTPS                                                                   57

     Para testar se o módulo PHP foi corretamente instalado basta simplesmente criar um
arquivo .php no diretório de uma das páginas/aplicações hospedadas, como exemplo, em
/var/www/html/truco.com.br.

      # vim /var/www/html/truco.com.br/info.php

     E adicionar o seguinte código dentro do arquivo:

<? php
      phpinfo ();
?>


             Figura 7.11: Código PHP para mostrar informações sobre o PHP.

     Por fim, basta simplesmente digitar na barra de pesquisa do navegador o caminho
truco.com.br/info.php, e ao teclar ENTER, deverá ser exibida uma página com a logo-
marca da linguagem PhP, bem como informações como versão, servidor, módulos utiliza-
dos, etc.


7.4      Habilitando HTTPS
Para habilitar o HTTPS Hyper Text Transfer Protocol Secure necessita-se utilizar TLS
(Transport Layer Security) para permitir que as comunicações sejam criptografadas, não
permitindo o envio de informações em texto puro através da rede.
     Para isso vamos, necessita-se criar um certificado SSL autoassinado que será utilizado
pelo servidor Apache para realizar suas comunicações. Um certificado autoassinado não
irá validar a identidade do servidor nos órgãos de validação de certificados, porém, ao
menos permitirá a realização de comunicações criptografadas.
     Antes de criar o certificado, deve-se instalar o pacote mod_ssl para poder habilitar o
https nos sites.

      # dnf install mod_ssl


7.4.1       Criando um certificado
Primeiramente, deve-se verificar o conteúdo do arquivo openssl.conf. No Rocky Linux 9,
por ser uma distibuição baseada nas distribuíções RedHat, o arquivo está localizado em:

      /etc/pki/tls/openssl.conf
7.4 Habilitando HTTPS                                                                  58


...
HOME = $ENV :: HOME
...
[ CA_default ]
dir = $HOME / CA


             Figura 7.12: Exemplo de como deve estar o arquivo openssl.conf

   Dentro deste arquivo, deve-se procurar as seguintes linhas, e, caso sejam diferentes
das linhas listadas abaixo, elas devem ser modificadas para se igualar às linhas mostradas
abaixo:




   Em seguida, deve-se criar um cartório digital. Isso pode ser feito utilizando-se os
seguintes comandos, na seguinte sequência:

# mkdir -p / CA / private
# mkdir -p / CA / newcerts
# touch / CA / index . txt
# echo 01 > / CA / serial
# cd / CA


              Figura 7.13: Comandos para a criação de um Cartório Digital

   Deve-se então criar a chave privada e o certificado da CA, utilizando o seguinte co-
mando:
      # openssl req -nodes -new -x509 -keyout ./private/cakey.pem -out
      cacert.pem -days 365
   Deve-se então criar a chave pública a partir da chave privada criada anteriormente,
utilizando o seguinte comando:

      # openssl rsa -in ./private/cakey.pem -pubout -out cakeypub.pem

   Crie um certificado auto-assinado com o seguinte comando:

      # openssl req -x509 -nodes -new -addext “subjectAltName =
      DNS:truco.com.br” -keyout priv-chavetruco.pem -out cert-truco.pem
      -days 365
7.4 Habilitando HTTPS                                                                     59

   Feito isso, crie uma requisição com o seguinte comando:

    # openssl req -nodes -new -addext “subjectAltName =
    DNS:www.truco.com.br, DNS:truco.com.br, DNS:ftp.truco.com.br,
    DNS:mail.truco.com.br” -keyout priv-chavetruco.pem -out
    req-truco.csr -days 365

   Para assinar a própria requisição:

    # openssl ca -out cert-truco.pem -in req-truco.csr -days 365

   OBS: Os nomes do país, estado, cidade e organização deste certificado deverão ser os
mesmos da organização do certificado da CA.
   Caso seja necessário assinar a requisição/certificado de terceiros, utilize o seguinte
comando:

    # openssl x509 -req -in req-truco.csr -copy_extensions=copy -CA
    ./cacert.pem -CAkey ./private/cakey.pem -CAserial ./serial -out
    cert-truco.pem -days 365

7.4.2    Utilizando SSL com servidor Apache
Após a criação dos certificados anteriormente, copie o certificado, o certificado do cartório
e a chave privada do site, para a pasta /etc/httpd/ssl (caso ela não exista, crie ela).

    # cp cert-truco.pem priv-chavetruco.pem cacert.pem /etc/httpd/ssl

   Tendo criado o certificado e copiado para a pasta ssl, deve-se agora alterar o arquivo
de configuração do domínio que deseja habilitar https:

    /etc/httpd/conf.d/truco.com.br.conf
7.4 Habilitando HTTPS                                                                       60

   Deve-se criar um novo VirtualHost que escuta na porta 443 com as seguintes configu-
rações:

< VirtualHost *:443 >
  ServerAdmin truco@truco . com . br
  ServerName www . truco . com . br
  ServerAlias truco . com . br
  DocumentRoot " / var / www / html / truco . com . br / "
  < Directory " / var / www / html / truco . com . br / " >
     AllowOverride all
     Require all granted
  </ Directory >
  SS LC er tif ic at eFi le / etc / httpd / ssl / cert - truco . pem
  S S L C e r t i f i c a t e K e y F i l e / etc / httpd / ssl / priv - chavetruco . pem
  S S L C A C e r t i f i ca t e F i l e / etc / httpd / ssl / cacert . pem
</ VirtualHost >


Figura 7.14: Exemplo de configurações a serem adicionadas no arquivo truco.com.br.conf

   As configurações adicionais significam:

   • SSLCertificateFile: O caminho onde está localizado o certificado do domínio.

   • SSLCertificateKeyFile: O caminho onde está localizado a chave privada do domínio.

   • SSLCACertificateFile: O caminho onde está localizado a chave privada do cartório
      que assinou o certificado do domínio.

   Caso o certificado possua nomes de host adicionais no campo Subject Alt Names, será
necessário adicionar o parâmetro ServerAliases, o qual deverá conter os nomes em Subject
Alt Names.
   Após essa configuração, deve-se reiniciar o servidor Apache:

    systemctl stop httpd

    systemctl start httpd
7.4 Habilitando HTTPS                                                                       61

7.4.3     Redirecionando de HTTP para HTTPS
Para forçar o uso de HTTPS nas páginas do servidor, é necessário fazer que o uso de SSL
seja requerido nos hosts virtuais que escutam na porta 80 (HTTP). Para isso deve-se usar
a configuração demonstrada na figura abaixo.

< VirtualHost *:80 >
   ServerAdmin truco@truco . com . br
   ServerName www . truco . com . br
   ServerAlias truco . com . br
   DocumentRoot " / var / www / html / truco . com . br / "
   < Directory " / var / www / html / truco . com . br / " >
        AllowOverride all
        Require all granted
   </ Directory >
   Redirect / https :// truco . com . br /
</ VirtualHost >


< VirtualHost *:443 >
  ServerAdmin truco@truco . com . br
  ServerName www . truco . com . br
  ServerAlias truco . com . br
  DocumentRoot " / var / www / html / truco . com . br / "
  < Directory " / var / www / html / truco . com . br / " >
     AllowOverride all
     Require all granted
  </ Directory >
  SS LC er tif ic at eFi le / etc / httpd / ssl / cert - truco . pem
  S S L C e r t i f i c a t e K e y F i l e / etc / httpd / ssl / priv - chavetruco . pem
  S S L C A C e r t i f i ca t e F i l e / etc / httpd / ssl / cacert . pem
</ VirtualHost >


                              Figura 7.15: VirtualHost com Redirect.

   Por fim, reinicie o serviço:

    systemctl stop httpd

    systemctl start httpd
7.5 Arquivo .htaccess                                                                      62

7.5      Arquivo .htaccess
Um arquivo .htaccess permite alterar as configurações de um site sem necessariamente
alterar seu arquivo de configuração principal. Esse arquivo geralmente fica oculto no
diretório raiz do site.
   Utilizando de exemplo o site dos tópicos anteriores, truco.com.br, o arquivo .htaccess
ficaria localizado em:

    /var/www/html/truco.com.br/.htaccess

   Para permitir o uso do .htaccess primeiramente deve-se inserir o parâmetro AllowO-
verride all no VirtualHost do site desejado, como demonstrado anteriormente.


7.5.1     Autenticando usuários com .htaccess
Pode-se fazer com que o acesso ao site hospedado seja realizado apenas por usuários
autorizados. Para isso, utiliza-se o arquivo .htaccess, adicionando a ele as seguintes regras:

AuthName " Acesso ␣ Restrito "
AuthType Basic
AuthUserFile / var / www / html / bancada2 /. permitidos . txt
Require valid - user


                          Figura 7.16: Autenticação com .htaccess.

   Essas configurações habilitam uma autenticação básica onde os usuários autorizados
estão armazenados em /var/www/html/truco.com.br/.permitidos.txt.
   Para criar o arquivo oculto .permitidos.txt basta utilizar o comando:

    # touch /var/www/html/truco.com.br/.permitidos.txt

   Por fim, para criar os usuários autorizados, basta utilizar o seguinte comando:

    # htpasswd /var/www/html/truco.com.br/.permitidos.txt Nome_Usuário
Capítulo 8

Nginx

O Nginx é um servidor de HTTP/HTTPS, proxy reverso, proxy de email IMAP/POP3.
Ele é um servidor mais leve do que o Apache devido a forma na qual lida com requisições
web e também pode trabalhar junto com o Apache.


8.1     Instalação
Para instalar o Nginx, digite o seguinte comando:

    # dnf install nginx

    Para habilitar a inicialização do serviço juntamente com o sistema, digite o comando:

    # systemctl enable nginx


8.2     Hospedando site HTTP
O arquivo de configuração padrão do nginx com as configurações dos servidores fica locali-
zado em /etc/nginx/nginx.conf. Abra o arquivo e adicione as seguintes configurações:

server {
           listen 80;
           server_name www . truco . com . br truco . com . br ;
           root / var / www / html / truco . com . br /;
           access_log / var / log / nginx / truco . com . br / access . log ;
           error_log / var / log / nginx / truco . com . br / error . log ;
}


                    Figura 8.1: Configuração padrão de uma aplicação.
8.2 Hospedando site HTTP                                                            64

   • listen 80: A porta na qual a aplicação vai estar hospedada.

   • server_name truco.com.br: Qual o endereço da aplicação, pode ser um domínio ou
      endereço IP.

   • root /var/www/html/truco.com.br: Endereço raiz da aplicação web contendo todos
      os arquivos da aplicação.

   • access_log /var/log/nginx/truco.com.br/access.log: Onde ficará salvo o arquivo de
      log referente aos acessos feitos a aplicação.

   • error_log /var/log/nginx/truco.com.br/error.log: Onde ficará salvo o arquivo de
      log referente aos erros da aplicação.

   Após realizar essas configurações, crie o diretório truco.com.br no /var/log/nginx e
no /var/www/html

    # mkdir /var/log/nginx/truco.com.br

    # mkdir /var/www/html/truco.com.br

   Navegue até o diretório /var/www/html/truco.com.br

    # cd /var/www/html/truco.com.br

   Crie um arquivo index.html simples apenas para testar o acesso a aplicação.

< html >
            < head >
                        < title > TRUCO </ title >
            </ head >
            < body >
                        <h1 > ZAP </ h1 >
                        <h2 > 7 COPAS </ h2 >
                        <h3 > ESPADILHA </ h3 >
                        <h4 > 7 OURO </ h4 >
            </ body >
</ html >


                                Figura 8.2: Arquivo html simples

   Feito isso, inicie o nginx

    # systemctl start nginx
8.3 Hospedando site HTTPS                                                                           65

    E em uma máquina cliente configurada com DNS do servidor, digite no navegador:
truco.com.br ou www.truco.com.br e deve-se exibir o arquivo index.html criado.




                     Figura 8.3: Site rodando normalmente na porta 80.



8.3     Hospedando site HTTPS
Para se criar um site com HTTPS, é necessário ter criado anteriormente o Cartório Digital
e gerar todas as chaves e certificados para poder assinar o certificado do site.
    Após gerar o Cartório Digital e assinar o certificado do site, adicione as seguintes
configurações no arquivo /etc/nginx/nginx.conf:

server {
           listen 443 ssl ;
           server_name www . truco . com . br truco . com . br ;
           root / var / www / html / truco . com . br ;
           access_log / var / log / nginx / https . truco . com . br / acces . log ;
           error_log / var / log / nginx / https . truco . com . br / error . log ;
           ssl_certificate / etc / httpd / ssl / cert - truco . com . br . pem ;
           s sl _ c er t if i ca t e _k e y / etc / httpd / ssl / priv - truco . com . br . pem ;
}


                           Figura 8.4: Configuração do site HTTPS.

    As únicas configurações diferentes do site em HTTP são a porta, que o HTTPS traba-
lha na 443, e as duas últimas linhas ssl_certificate que contêm o caminho do certificado
8.4 Redirecionamento automático para HTTPS                                            66

assinado e ssl_certificate_key que contêm o caminho da chave que assinou o certificado
(chave previamente assinada pelo cartório).


8.4     Redirecionamento automático para HTTPS
O nginx por padrão não redireciona o site HTTP para HTTPS, porém para adicionar esse
redirecionamento de forma automática, basta adicionar a seguinte linha na configuração
do site HTTP:

server {
           listen           80;
           server_name      www . truco . com . br truco . com . br ;
           root             / var / www / html / truco . com . br /;
           access_log / var / log / nginx / truco . com . br / access . log ;
           error_log / var / log / nginx / truco . com . br / error . log ;
           return 301 https :// $hos t$reques t_uri ;
           ...


                    Figura 8.5: Adicionando redirecionamento HTTPS.

   Ao adicionar o return 301, o nginx vai retornar o HTTP STATUS CODE 301, que
significa a página mudou de endereço, e vai redirecionar o usuário automaticamente para
a página HTTPS.


8.5     Balanceamento de carga
O balanceamento de cargo feito pelo NGINX permite que uma mesma aplicação esteja
hospedada em várias maquinas diferentes, e o próprio NGINX escolherá de acordo com
um critério, para qual das máquinas ele vai direcionar o usuário. Os critérios utilizados
pelo NGINX são;

   • least_conn: Máquina com o menor número de conexões.

   • least_time: Máquina com menor tempo médio de resposta.

   • random: Uma máquina aleatório.

   Para exemplificar o balanceamento de carga do NGINX, crie duas máquinas virtuais
dentro de uma mesma rede que pertençam ao servidor NGINX rodando na placa externa,
hospedando apenas um arquivo teste do PHP rodando na porta 10000.
8.6 Redirecionamento para outras aplicações                                           67

    Em seguida, adicione as seguintes alterações no arquivo /etc/nginx/nginx.conf:

upstream backend {
          least - conn ;
          server $IPVM1 ;
          server $IPVM2 ;
}


// Dentro do arquivo de configuracao do dominio truco . com . br
// adicione a seguinte linha :


location / {
    proxy_pass http :// backend ;
}


                            Figura 8.6: Balanceamento de carga.

    Agora o NGINX conseguirá realizar o balanceamento de carga, direcionando o usuário
para a máquina que tiver menos conexões estabelecidas.


8.6      Redirecionamento para outras aplicações
Em um mesmo domínio, pode-se hospedar diferentes aplicações e acessa-lás no navegador
digitando o domínio + nome da aplicação definida no nginx. Para realizar essa configu-
ração, basta adicionar as seguintes linhas no arquivo de configuração do domínio:

...
location / captive / {
                    proxy_pass http : / / 1 9 2 . 1 6 8 . 1 . 1 2 8 : 2 0 0 0 0 / ;
          }
location / trafegorede / {
                    proxy_pass http : / / 1 9 2 . 1 6 8 . 1 . 1 2 8 : 8 0 / ;
          }
}


          Figura 8.7: Redirecionando para outras aplicações dentro do domínio.
8.6 Redirecionamento para outras aplicações                                        68

   Agora, ao digitar o endereço truco.com.br/trafegorede/, será redirecionado para uma
aplicação rodando na máquina 192.168.1.128 na porta 80, como mostra a figura abaixo.




Figura 8.8:    Aplicação rodando em outra máquina sendo acessada pelo domínio
truco.com.br
Capítulo 9

Servidor FTP

FTP ou File Transfer Protocol (Protocolo de Transferência de Arquivos) é uma forma
rápida e versátil para se transferir arquivos, sendo uma das mais usadas na Internet. Neste
capítulo, será configurado um serviço FTP para que clientes possam efetuar transferências
de arquivo com este protocolo.


9.1     Instalando o Servidor FTP
Instale o pacote vsftpd para obter o FTP no servidor.:

    # dnf install vsftpd
   Após o término da instalação é necessário criar os usuários que terão acesso ao servidor
FTP. Como já foi criado um site com domínio próprio anteriormente, crie um usuário com
o nome desse domínio e defina uma senha para este usuário (ATENÇÃO: Essa senha será
usada para realizar o login no servidor FTP).

    # useradd -d /var/www/html/truco.com.br www-truco.com.br

    # passwd www-truco.com.br

   Altere o dono e o grupo dos arquivos do site.

    # chown -R www-truco.com.br:apache

   Altere a permissão dos arquivos.

    # chmod -R o-rwx truco.com.br

   Adicione o bit de controle de grupo (GID) no diretório principal do site e em todos
os seus subdiretórios para que qualquer arquivo novo criado, tenha o mesmo grupo que o
diretório em que o arquivo está sendo criado.

    # find ./truco.com.br -type d -exec chmod g+s {} \;
9.2 Configurando o FTP                                                                70

9.2     Configurando o FTP
Edite a seguinte linha para dizer que não sera permitido o acesso anônimo ao servidor
FTP, em outras palavras, somente usuários que possuírem um login e senha poderão
acessar o servidor.

    anonymous_enable=no

   Para salvar estas configurações e colocá-las em funcionamento, é necessário reiniciar
o serviço:

    # systemctl stop vsftpd.service

    # systemctl start vsftpd.service

   lembre-se também de ativar o serviço para que o mesmo se inicie com o sistema

    # systemctl enable vsftpd.service

   Para testar as configurações, vá ao filezilla de um cliente e tente acessar o servidor
ftp(caso esteja utilizando um firewall, lembre-se de liberar as portas 20 e 21):




                 Figura 9.1: Acessando servidor FTP pela primeira vez.
9.3 Impedindo o usuário de acessar a raiz do sistema                                   71

9.3     Impedindo o usuário de acessar a raiz do sistema
Como pode-se notar, o usuário possui navegação entre diretórios na parte direita da tela,
mas não é recomendado que o mesmo navegue para os diretórios acima de sua própria
raiz pois deste modo ele têm acesso a todos os arquivos do servidor ftp. Para desativar
esta opção do usuário, edite novamente o arquivo de configuração do FTP:
   Descomente a linha abaixo para que o cliente ftp possa identificar qual é a raiz do
usuário e utilizá-la também como raiz do cliente.

    chroot_local_user=YES

   Adicione a linha de configuração a seguir, logo abaixo da linha acima, para que o
cliente possa enviar arquivos apenas no seu diretório raiz, deste modo, não poderá alterar
ou inserir arquivos que danifiquem o sistema completo.

    allow_writeable_chroot=YES




Figura 9.2: Acessando servidor FTP após alterar configurações e enviando arquivo
teste.html
9.4 Comunicação FTP segura                                                                            72

9.4         Comunicação FTP segura
Para realizar o FTP com criptografia, deve-se criar um certificado e uma chave privada
com o domínio do servidor que está hospedando o ftp. Para verificar qual domínio da
máquina hospedando o servidor ftp, digite o comando:

      # hostname -d

     Na máquina usada nesse relatório, o domínio é exemplo.com.
     Feito isso, crie um certificado e uma chave privada desse domínio com o seguinte
comando (Lembre-se de criar uma zona relacionada a esse domínio que resolva o endereço
ftp.dominio.com):

      # openssl req -x509 -nodes -new -addext “subjectAltName =
      DNS:exemplo.com, DNS:mail.exemplo.com, DNS:ftp.exemplo.com”
      -keyout priv-exemplo.com.pem -out cert-exemplo.com.pem -days 365

     Copie o certificado e a chave criada para pasta /etc/vsftpd/ssl (crie o diretório ssl).

      # cp ./priv-exemplo.com.pem ./etc/vsftpd/ssl && mv
      ./cert-exemplo.com.pem ./etc/vsftpd/ssl

     Após isso, adicione as seguintes linhas no arquivo de configuração FTP:

# Criptografia
ssl_enable = YES
allow_anon_ssl = NO
f o r c e _ l o c a l _ da t a _ s s l = YES
f o r c e _ l o c a l _ l o g i n s _ s s l = YES


ssl_tlsv1 = YES
ssl_sslv2 = NO
ssl_sslv3 = NO
rsa_cert_file =/ etc / vsftpd / ssl / cert - exemplo . com . pem
r s a _ p r i v a t e _ ke y _ f i l e =/ etc / vsftpd / ssl / private / priv - exemplo . com . pem


                                           Figura 9.3: Segunrança no FTP.

     Estas linhas indicam respectivamente:

     • ssl_enable: se será uma comunicação segura ou não

     • allow_anon_ssl: se será permitido que um usuário anonimo possa se autenticar com
        criptografia
9.4 Comunicação FTP segura                                                               73

   • force_local_data_ssl: obrigar todos os usuario não anonimos a utilizar a comuni-
     cação segura para que os dados trafeguem de forma segura

   • force_local_login_ssl: todos os usuario não anonimos, ao se conectar, enviarão a
     senha de forma segura.

   • ssl_tlsv1: indica que o modo de segurança utilizado será o tls Versão 1.

   • ssl_sslv2 e ssl_sslv3: indicam se deve utilizar SSL nas versões 2 e 3 respectivamente

   • rsa_cert_file: caminho do certificado criado

   • rsa_private_key_file: caminho da chave criada.

   Agora ao realizar o acesso ao servidor FTP no filezilla utilizando o host ftp.exemplo.com,
será exibida uma mensagem perguntando se deseja confiar no certificado:




                 Figura 9.4: Acessando servidor FTP com criptografia

   Basta clicar em OK e os arquivos serão listados normalmente.
9.5 Impedindo acesso via SSH                                                                  74

9.5     Impedindo acesso via SSH
Com as configurações feitas até o momento, o usuário criado anteriormente para realizar
o acesso via FTP poderia fazer um acesso SSH na máquina que hospeda o servidor FTP
e acabar comprometendo-a.
   Para desabilitar isso, abra o arquivo que contêm todos os usuários do sistema:

    # vim /etc/passwd

   Altere o shell do usuário criado para /sbin/nologin:

www - truco . com . br : x :1001:1001::/ var / www / html / truco . com . br /:/ sbin / nologin


                Figura 9.5: Alterando shell do usuário para /sbin/nologin

   Feito isso, abra o arquivo que contêm os shells válidos para o sistema:

    # vim /etc/shells

   E adicione o shell /sbin/nologin ao final do arquivo e salve e feche o arquivo.
   Após essas configurações o usuário poderá fazer o acesso via FTP, porém não conse-
guirá realizar um acesso via SSH.
Capítulo 10

Servidor de Email

Um servidor de email pode ser descrito como um sistema que coleta, processa e envia
emails. Diversos servidores fornecem o serviço de envio de emails através da implementa-
ção do protocolo SMTP (Simple Mail Transfer Protocol ). Este protocolo é o responsavel
por efetivamente repassar os emails de um servidor para outro. É importante notar que
o SMTP apenas realiza a entrega do email, sendo necessário utilizar outros protocolos,
como por exemplo POP3 ou IMAP, para que o usuário possa receber o email.


10.1      Instalando o serviços necessários para o funciona-
          mento do servidor de email
Inicialmente, é imperativo para o funcionamento do servidor de email que o serviço de
DNS esteja configurado corretamente e esteja em execução no servidor.
   Após averiguar o funcionamento do serviço de DNS, deve-se instalar no servidor o
serviço postfix, utilizando o comando abaixo:

    # dnf install postfix

   Este serviço irá efetivamente realizar as funções do protocolo SMTP. Deve-se então
iniciar o serviço, utilizando o seguinte comando:

    # dnf start postfix

   Para se evitar futuros erros de funcionamento, deve-se garantir que o firewall do ser-
vidor possua as seguintes regras:

    iptables -A INPUT -i lo -j ACCEPT

    iptables -A INPUT -m multiport -p tcp --port 25 -j ACCEPT
10.2 Utilizando telnet                                                                   76

   A primeira regra permite que conexões feitas na interface de loopback, ou seja, con-
sultas sobre a máquina servidora feitas pela própria máquina servidora, sejam aceitas.
   A segunda regra permite que conexões feitas em qualquer interface que tenham como
destino a porta 25, a porta padrão utilizada pelo protocolo SMTP, sejam aceitas.


10.2      Utilizando telnet
Tendo sido realizada a instalação do postfix e as configurações do firewall descritas, pode-
se utilizar o protocolo telnet para testar as funcionalidades do serviço postfix. Para
instala-lo, basta utilizar o seguinte comando:

    # dnf install telnet

   Após instalado, para utiliza-lo basta digitar o seguinte comando:

    # telnet 127.0.0.1 25

Neste caso, 127.0.0.1 é o endereço de loopback, pois o teste está sendo feito na própria
máquina servidora, e 25 é a porta que está sendo utilizada para a comunicação. Caso o
protocolo telnet estivesse sendo utilizado de outra máquina na rede interna, o endereço
de loopback no comando deveria ser substituído pelo endereço IP do servidor.
   Por exemplo, na rede 192.168.1.0, onde 192.168.1.1 é o endereço IP do servidor e
192.168.1.2 é o endereço IP de uma máquina na rede interna. O comando seria:

    # telnet 192.168.1.1 25
10.2 Utilizando telnet                                                                  77

Após digitar o comando citado e apertar a tecla ENTER, será aberto um prompt no
qual o usuário pode digitar a mensagem que deseja transmitir. Como o intuito é testar
as funcionalidades do servidor de email, a mensagem deve seguir um formato específico,
como demonstrado abaixo:

HELO mail . planalto . gov . br
MAIL FROM : < dilma . roussef@planalto . gov . br >
RCPT TO : < h e r l o n c a m a r g o @ l a b r e d e s . info >
DATA
To : Herlon Camargo < h e r l o n c a m a r g o @ l a b r e d e s . info >
From : Dilma Roussef < dilma . roussef@planalto . gov . br >
Subject : Socorro !!!


Conteudo do email


.


QUIT


                       Figura 10.1: Exemplo de um email enviado por telnet


    • HELO: Mensagem que anuncia quem é o usuário que está online;

    • MAIL FROM: Indica o remetente do email;

    • RCPT TO: Indica o destinatário do email;

    • DATA: Indica o conteúdo do email. Neste caso, deve-se colocar as linhas To:...,
       From:... e subject:..., para fins de formatação. Deve então ser inserida uma linha
       em branco, seguida pelo conteudo do email, seguida por outra linha em branco;

    • Ponto final (.): Caractere que indica a finalização do email;

    • QUIT: Indica que o usuário deseja sair do prompt do serviço telnet.

    Como destacado anteriormente, este envio de email atraves do serviço telnet foi reali-
zado utilizando o endereço IP de loopback. Isso deve-se ao fato de que o serviço postfix
ainda não foi devidamente configurado, e, portanto, não pode enviar emails para outros
usuários ou servidores de email através da internet. Para verificar se este email realmente
foi gerado e enviado, basta utilizar o comando abaixo:

     # tail -50 /var/log/maillog
10.2 Utilizando telnet                                                              78

    Este é o arquivo responsável por armazenar todos os eventos relacionados ao serviço
postfix. Caso o email tenha sido propriamente gerado e enviado, ao ser executado o
comando acima, deve ser exibido um resultado similar ao demonstrado abaixo:

Jan     5 03:41:41 servidor postfix / postfix - script [11048]:
starting the Postfix mail system
Jan     5 03:43:08 servidor postfix / smtpd [11182]:
connect from localhost [127.0.0.1]
Jan     5 03:44:14 servidor postfix / smtpd [11182]:
2 B56621CA5 : client = localhost [127.0.0.1]
Jan     5 03:45:41 servidor postfix / cleanup [11187]:
2 B56621CA5 : message - id = <20230106064414.2 B56621 CA5@exemp lo . com >
Jan     5 03:45:41 servidor postfix / qmgr [11052]:
2 B56621CA5 : from = < dilma . roussef@planalto . gov . br > ,
size =489 , nrcpt =1 ( queue active )
Jan     5 03:45:44 servidor postfix / smtp [11190]:
2 B56621CA5 : to = < h e r l o n c a m a r g o @ l a b r e d e s . info > ,
relay = mail . labredes . info [200.131.10.180]:25 , delay =115 ,
delays =113/0.1/0.74/1.4 , dsn =2.0.0 , status = sent
(250 2.0.0 Ok : queued as 8 D93846C004C )
Jan     5 03:45:44 servidor postfix / qmgr [11052]:2 B56621CA5 : removed
Jan     5 03:45:49 servidor postfix / smtpd [11182]:
disconnect from localhost [127.0.0.1] helo =1 mail =1
rcpt =1 data =1 quit =1 commands =5


                                Figura 10.2: Conteudo do arquivo mailog
10.3 Configurando o serviço postfix                                               79

10.3          Configurando o serviço postfix
Deve-se agora configurar o arquivo localizado em /etc/postfix/main.cf para garantir o
funcionamento correto do servidor SMTP. Dentro do arquivo, as seguintes linhas devem
ser alteradas:

queue_directory = / var / spool / postfix
[...]
myhostname = mail . exemplo . com
[...]
mydomain = exemplo . com
[...]
myorigin = $mydomain
[...]
inet_interfaces = all
[...]
inet_protocols = all
[...]
mydestination = $myhostname , localhost . $mydomain , localhost , $mydomain
[...]
relayhost =
[...]
mynetworks = 127.0.0.0/8
[...]
home_mailbox = Maildir /
[...]
smtpd_banner = $myhostname ESMTP $mail_name
[...]
smtpd_sasl_type = dovecot
smtpd_sasl_path = private / auth
s m t p d _ s a s l _ a u t h _ e n a b l e = yes
s m t p d _ s a s l _ s e c u r i t y _ o p t i o n s = noanonymous
smtpd_sasl_local_domain =
[...]
s m t p d _ r e l a y _ r e s t r i c t i o n s = permit_sasl_authenticated ,
reject_unauth_destination
s m t p d _ r e c i p i e n t _ r e s t r i c t i o n s = permit_mynetworks ,
permit_sasl_authenticated , reject_unauth_destination ,
reject_unknown_helo_hostname


                                           Figura 10.3: Arquivo main.c
10.3 Configurando o serviço postfix                                                      80

  • queue_directory = /var/spool/postfix : Arquivo que representa um "fila"na qual
    são armazenados emails que ainda não foram enviados;

  • myhostname = mail.exemplo.com : Nome dado a maquina em que está sendo hos-
    pedado o servidor de email;

  • mydomain = exemplo.com.br : DNS do servidor;

  • myorigin = $mydomain : Especifica o dominio que será atribuído a emails enviados
    de forma local. É recomendado utilizar $mydomain ao invés de $myhostname, para
    evitar ambiguidade em redes locais maiores;

  • inet_interfaces = all : Indica de quais interfaces o serviço postfix irá aceitar emails.
    Neste caso, o parâmetro all permitirá ao postfix aceitar emails vindos de qualquer
    interface.

  • inet_protocols = all : Indica quais protocolos serão aceitos pelo postfix. Neste caso,
    o parâmetro all permite que o postfix aceite emails que utilizem tanto IPV4 quanto
    IPV6;

  • mydestination = $myhostname, $mydomain, localhost.$mydomain, localhost : Caso
    um email possuir algum destes endereços especificados como destino, a entrega será
    feita de modo local, ao invés de haver um repasse para outra máquina da rede;

  • mynetworks = 127.0.0.0/8 : Indica quais endereços de IP podem utilizar o serviço
    sem a necessidade de se autenticar;

  • relayhost = : Caso o servidor não realize a entrega diretamente, este parâmetro
    indica para qual máquina deve ser repassado o email para que se realize o envio.
    Neste caso, matêm-se o parâmetro vazio, pois para este exemplo, não será utilizada
    esta funcionalidade;

  • home_mailbox = Maildir/ : Caso seja desejavel armazenar os emails em diretórios
    específicos por usuário, deve-se mudar este parâmetro para "Maildir/", do contrário,
    os emails serão armazenados no diretório padrão /var/mail ;

  • smtpd_banner = $myhostname ESMTP $mail_name : Identificação que é mos-
    trada ao se realizar uma varredura com NMAP ou serviços similares.

  • smtp_sasl_type: indica qual serviço irá realizar a autenticação. Neste caso, a
    autenticação será feita pelo serviço Dovecot;

  • smtpd_sasl_path: Caminho para a configuração que indica o tipo de autenticação,
    neste caso, a autenticação será feita com usuário e senha;
10.4 Instalando Dovecot                                                                    81

   • smtpd_sasl_auth_enable: Efetivamente habilita a autenticação;

   • smtpd_sasl_security_options: Opções que tratam logins sem autenticação. Neste
         caso, o parâmetro noanonymous bloqueia conexões sem atenticação;

   • smtpd_sasl_local_domain: Indica o domínio local. O parâmetro vazio é permitido
         pois a verificação do hostname já será realizada devido às configurações acima;

   • smtpd_recipient_restrictions: Indica quais restrições o serviço utilizará caso o ser-
         vidor seja utilizado como relay de outro usuário.

   Também deve-se abrir o arquivo localizado em /etc/postfix/master.cf, o qual indica a
forma como a conexão ao servidor de email será feita, e deve-se descomentar a seguinte
linha:

    submission inet n - n - - smtpd

   Por fim, salve a alteração, e feche o arquivo.


10.4         Instalando Dovecot
Como destacado no início do capitulo, o protocolo SMTP realiza apenas o envio dos
emails, sendo necessário o uso de outro protocolo, tal como IMAP ou POP3, para queo
usuário possa receber um email. Para este fim, será utilizado o Dovecot, um serviço de
código aberto que realiza a função do protocolo IMAP. Para instala-lo, basta utilizar o
seguinte comando:

    # dnf install dovecot

   Logo após, deve-se configurar o serviço dovecot. O primeiro arquivo está localizado
em vim /etc/dovecot/dovecot.conf, e nele devem ser alteradas as seguintes linhas:;

[...]
protocols = imap pop3 lmtp
[...]
listen = * , ::
[...]


                              Figura 10.4: Arquivo dovecot.conf

   O campo protocols indica quais protocolos serão utilizados durante a comunicação; O
campo listen indica quais endereços IP poderão se conectar ao servidor de email e poderão
utiliza-lo. A opçao "*"indica que qualquer endereço IP poderá utilizar o serviço.
   Após feitas as alterações necessárias, salve as alterações e feche o arquivo.
10.4 Instalando Dovecot                                                               82

    Deve-se agora modificar as opções de autenticação do serviço Dovecot, localizadas no
arquivo /etc/dovecot/conf.d/10-auth.conf :

d i s a b l e _ p l a i n t e x t _ a u t h = no


auth_mechanisms = plain login


                                       Figura 10.5: Arquivo 10-auth.conf


    • disable_plaintext_auth: Este parâmetre desabilita a autenticação comt texto puro,
        sem criptografia. O valor deve ser no, pois para este exemplo, a autenticação com
        plain text será utilizada;

    • auth_mechanisms: Mecanismos utilizados para a autenticação. Para este exemplo,
        será utilizada a opção plain login.

    Após as modificações, salve as alterações e feche o arquivo.
    Agora, deve-se configurar o arquivo de emails, localizado em /etc/dovecot/conf.d/10-
mail.conf. A única modificação que deve ser feita neste arquivo é descomentar a linha
indicada abaixo:

      mail_location = maildir: /Maildir

    Esta opção estará indicando onde está localizado o diretório de emails do usuário,
sendo este, o diretorio configurado no postfix.
    Após a modificação, salve a alteração e feche o arquivo.
    Inicialmente, deve-se abrir o arquivo localizado em /etc/dovecot/conf.d/10-ssl.conf e
modificar a seguinte linha:

      ssl = no

    Esta modificação irá desabilitar a criptografia.
    Após a modificação, salve a alteração e feche o arquivo.
10.4 Instalando Dovecot                                                                     83

        Após, deve-se editar o arquivo de configurações gerais, localizado em /etc/dovecot/conf.d/10-
master.conf :

[...]
service imap - login {
    inet_listener imap {
        port = 143
    }
}


[...]


service submission - login {
    inet_listener submission {
        port = 587
    }
}


[...]


Postfix smtp - auth


unix_listener / var / spool / spostfix / private / auth {
    mode = 0666
    user = postfix
    group = postfix
}


[...]


                               Figura 10.6: Arquivo 10-master.conf

        Caso alguma das linhas demostradas acima esteja comentada, deve-se descomenta-la.
        Este bloco é responsável pela configuração de autenticação do servico SMTP, onde é
configurado o usuário e o grupo responsável pelo servidor de email.
        Deve-se, então, salvar as alterações e fechar o arquivo.
        Deve-se, então, reiniciar o serviço Dovecot, utilizando os seguintes comandos:

         # systemctl stop dovecot

         # systemctl start dovecot
10.5 Configurando a comunicação com Segurança                                              84

      Deve-se também ativar o serviço para que este inicialize juntamente ao sistema:

       # systemctl enable dovecot

      Por fim, deve-se criar os usuários para utilizar o serviço de email. Isso pode ser feito
utilizando o seguinte comando:

       #useradd joaolucas

       #useradd ruan

      Deve-se também definir senhas para todos os usuários gerados, o que pode ser feito
utilizando o seguinte comando:

       #passwd joaolucas

       #passwd ruan


10.5        Configurando a comunicação com Segurança
Para haver uma comunicação inteiramente segura, é necessário configurar para que esta
ocorra na porta 587 do protocolo SMTP, pois a comunicação realizada através da porta
25, a porta padrão do protocolo, não possui autenticação ou criptografia. É importante
ressaltar que a comunicação utilizando a porta 587 é feita apenas entre o cliente e o
servidor. Entre dois servidores de email, a cominicaçao ocorre, normalmente, na porta
25;
      Para ativar a comunicação através da porta 587, abra o arquivo /etc/postfix/master.cf
e descomente as duas linhas abaixo, se estiverem comentadas:

       smtp inet n - n - - smtpd

       submission inet n - n - - smtpd
10.6 Configurando o cliente (Evolution)                                                 85

10.6      Configurando o cliente (Evolution)
Após configurar o servidor de email corretamente e ter criado os usuários para enviar e
receber emails, inicie as configurações do cliente que usará esse servidor de email através
de uma interface gráfica (Evolution).
   Abra o Evolution e na primeira janela Identity (Identidade), preencha os campos
da seguinte forma(lembrando que essas configurações mudam dependendo do nome do
domínio e do nome dos usuários criados anteriormente) e clique em Next:




                Figura 10.7: Primeira janela de configuração Evolution.

   O campo Full Name indica qual o nome do usuário que está mandando email, por-
tanto, insira o mesmo nome do usuário criado anteriormente. O outro campo, Email
Address, é o email desse usuário e deve ser preenchido da seguinte forma: $NOMEUSU-
ARIOCRIADO@$DOMINIODOSERVIDORDEEMAIL.
10.6 Configurando o cliente (Evolution)                                            86

   A próxima janela de configuração é a Receiving Email (Recebendo Email) e deve ser
configurada da seguinte forma:




                Figura 10.8: Segunda janela de configuração Evolution.

   O campo Server é o endereço do servidor que será utilizado para enviar os emails
e deve-se preencher com mail.$DOMINIOSERVIDOREMAIL (lembre-se de configurar o
dns da máquina cliente) e a porta padrão sem criptografia é a 143. O campo Username é
nome do usuário que vai estar mandando os emails. Na subseção Security o Encryption
Method (Método de encriptamento) deve ser No encryption, pois o servidor ainda não
possui criptografia configurada. Por último, na subseção Authentication deixe o padrão
Password.
10.6 Configurando o cliente (Evolution)                                             87

   A próxima e última janela de configuração importante é a Sending Email (Enviando
Email) e deve ser configurada da seguinte forma para que utilize a criptografia:




                 Figura 10.9: última janela de configuração Evolution.

   O campo Server Type indica qual o tipo de servidor que vai estar enviando os emails,
deixe o padrão SMTP. Na subseção Configuration no campo Server digite o endereço do
servidor, da seguinte forma: mail.$DOMINIOSERVIDOREMAIL e altere a porta para
587 que é a porta que não usa criptografia para enviar emails. Marque a caixinha Server
requires authentication para indicar que ao enviar um email, deve ser realizada uma au-
tenticação. Na subseção Security deixe o Encryption method como No encryption e por
fim, na subseção Authentication, no campo Type coloque o método PLAIN, que indica
uma autenticação através de usuário e senha. O último campo Username é o usuário que
vai se autenticar no servidor de email.
10.7 Autenticação ssl                                                                              88

10.7          Autenticação ssl
Para efetivamente se ativar a criptografia através de ssl, abra o arquivo localizado em
/etc/postfix/main.cf e comente as seguintes linhas (Use 3 cerquilhas para diferenciar
estas linhas de comentarios normais):

[...]
# ## s m tp d _t l s_ c e rt _ fi l e = / etc / pki / tls / certs / postfix . pem
[...]
# ## sm tp d_t ls _k ey_ fi le = / etc / pki / tls / private / postfix . key
[...]
# ## s m t p d _ t l s _ s e c u r i t y _ l e v e l = may
[...]


                                          Figura 10.10: Arquivo main.cf

    Edite o arquivo “/etc/postfix/main.cf” para adicionar as linhas abaixo, responsá-
veis pela criptografia.

# Configurando criptografia


sm tp d_ tls _k ey _fi le = / etc / httpd / ssl / priv - exemplo . com . pem
s mt p d _t l s_ c er t _ fi l e = / etc / httpd / ssl / cert - exemplo . com . pem
s m t p d _ t l s _ s e c u r i t y _ l e v e l = may
s m t p _ t l s _ s e c u r i t y _ l e v e l = may
sm tp d_ tls _l og lev el = 1
s m t p d _ t l s _ s e s s i o n _ c a c h e _ t i m e o u t = 3600 s
s m t p d _ t l s _ s e s s i o n _ c a c h e _ d a t a b a s e = btree :/ var / lib / postfix /
smtpd_tls_cache . db
tls_ random_so urce = dev :/ dev / urandom
t l s _ r a n d o m _ e x c h a n g e _ n a m e = / var / lib / postfix / prng_exch
s mt p d _t l s_ a ut h _ on l y = yes


                                                 Figura 10.11: main.cf


    • smtpd_tls_key_file : Caminho para a chave privada;

    • smtpd_tls_cert_file : Caminho para o certificado;

    • smtpd_tls_security_level : Indica se o usuário será forçado a usar criptografia. Se
        o parâmetro for "may", o usuário que se conectar ao servidor de email pode ou não
        utilizar criptografia, e se estiver "encrypt"o usuário que se conectar ao servidor de
        email deverá usar criptografia;
10.7 Autenticação ssl                                                                   89

    • smtp_tls_security_level : Indica se o servidor ao qual o usuário se conectar deve
        fornecer alguma forma de criptografia. Se o parâmetro for "may", o servidor pode
        ou não oferecer a criptografia, e se estiver "encrypt"o servidor deverá fornecer a
        criptografia;

    • smtpd_tls_loglevel : Indica a quantia de informações que serão armazenadas no
        arquivo log. O valor varia de 0 a 4, sendo 0 o tipo com menos infromações, e 4
        sendo o tipo com a maior quantia de informações;

    • smtpd_tls_session_cache_timeout : Indica o tempo no qual o certificado utili-
        zado para autenticação será válido, antes de ser necessário que este seja novamente
        fornecido;

    • smtpd_tls_session_cache_database : Arquivo no qual serão armazenadas as infor-
        mações de cache;

    • tls_random_source : Para a criptografia é necessário um gerador de numeros alea-
        torios, indicado por esta linha;

    • tls_random_exchange_name : arquivo que indica o estado do gerador de números
        aleatórios;

    • smtpd_tls_auth_only : Define se o login e senha deverão ser criptografados.

    Por fim, entre no arquivo master.cf e descomente as seguintes linha

smtps inet n - n - - smtpd


-o s m t p d _ t l s _ w r a p p e r m o d e = yes


                                               Figura 10.12: master.cf

    Reinicie o serviço, utilizando os seguintes comandos:

      # systemctl stop postfix

      # systemctl start postfix

    Logo após, abra o arquivo localizando em “vim /etc/dovecot/conf.d/10-ssl.conf”
e realize as seguintes mudanças, de modo a habilitar a criptografia:
    Por fim, altere o arquivo /etc/dovecot/conf.d/10-auth.conf:

      disable_plaintext_auth = yes # Não permite senha em modo texto
10.7 Autenticação ssl                                                               90


[...]
ssl = yes
[...]
ssl_cert = </ etc / httpd / ssl / cert - exemplo . com . pem
ssl_key = </ etc / httpd / ssl / priv - exemplo . com . pem


                                 Figura 10.13: 10-ssl.conf

    auth_mechanisms = plain login # Habilita o login somente através
    de usuário e senha

   Deve-se então reiniciar o serviço do dovecot.

    # systemctl stop dovecot

    # systemctl start dovecot

Para verificar se as configurações foram realizadas corretamente, na máquina que está
hospedando o servidor de email, utilize o comando abaixo:

    # openssl s_client -servername mail.exemplo.com -connect
    mail.exemplo.com:smtps

Ao fim da mensagem exibida, deverá estar escrito o códio 220, que indica que o servidor
é capaz de enviar e receber emails.
10.7 Autenticação ssl                                                              91

10.7.1    Configurando Evolution com criptografia
Abra o Evolution e na primeira janela Identity (Identidade), preencha os campos da se-
guinte forma(lembrando que essas configurações mudam dependendo do nome do domínio
e do nome dos usuários criados anteriormente) e clique em Next:




               Figura 10.14: Primeira janela de configuração Evolution.

   O campo Full Name indica qual o nome do usuário que está mandando email, por-
tanto, insira o mesmo nome do usuário criado anteriormente. O outro campo, Email
Address, é o email desse usuário e deve ser preenchido da seguinte forma: $NOMEUSU-
ARIOCRIADO@$DOMINIODOSERVIDORDEEMAIL.
10.7 Autenticação ssl                                                              92

   A próxima janela de configuração é a Receiving Email (Recebendo Email) e deve ser
configurada da seguinte forma para que utilize a criptografia:




                Figura 10.15: Segunda janela de configuração Evolution.

   O campo Server é o endereço do servidor que será utilizado para enviar os emails
e deve-se preencher com mail.$DOMINIOSERVIDOREMAIL (lembre-se de configurar o
dns da máquina cliente) e a porta que utiliza criptografia é a 993. O campo Username é
nome do usuário que vai estar mandando os emails. Na subseção Security o Encryption
Method (Método de encriptamento) deve ser TLS on a dedicated port. Por último, na
subseção Authentication deixe o padrão Password.
10.7 Autenticação ssl                                                                   93

   A próxima e última janela de configuração importante é a Sending Email (Enviando
Email) e deve ser configurada da seguinte forma para que utilize a criptografia:




                 Figura 10.16: última janela de configuração Evolution.

   O campo Server Type indica qual o tipo de servidor que vai estar enviando os emails,
deixe o padrão SMTP. Na subseção Configuration no campo Server digite o endereço do
servidor, da seguinte forma: mail.$DOMINIOSERVIDOREMAIL e altere a porta para 465
que é a porta que usa criptografia para enviar emails. Marque a caixinha Server requires
authentication para indicar que ao enviar um email, deve ser realizada uma autenticação.
Na subseção Security deixe o Encryption method como TLS on a dedicated port e por
fim, na subseção Authentication, no campo Type coloque o método PLAIN, que indica
uma autenticação através de usuário e senha. O último campo Username é o usuário que
vai se autenticar no servidor de email.
   Em caso de erros, verifique se o firewall ativo no servidor possui as seguintes regras:
    # iptables -A INPUT -m multiport -p tcp –port 465, 993 -j ACCEPT

    # iptables -A FORWARD -m multiport -p tcp –port 465, 993 -j ACCEPT
   Caso não as possua, adicione-as e refaça os passos descritos.
10.8 Configurando Web Mail                                                           94

10.8      Configurando Web Mail
Nesta seção, será configurado o Web Mail, um serviço que permite ao usuario enviar e
receber emails através do navegador.
   Será utilizado o roundcubemail, que, por padrão, não está incluso no repositório do
Rocky Linux 9, portanto, será necessário instalar um repositório extra. Em uma máquina
virtual instalada na máquina cliente, utilize os seguintes comandos:

    # dnf update

    # dnf install httpd

    # dnf install epel-release

   Deve-se, então, instalar o roundcube:

    # dnf install roundcubemail

   Logo após, abra o arquivo de configuração localizado em /etc/httpd/conf.d/roundcubemail.conf
e modifique as seguintes linhas:

[...]
< Directory / usr / share / roundcubemail / >
     < IfModule mod_authz_core .c >
          # Apache 2.4
          # Require local
          Require all granted
     </ IfModule >
     < IfModule ! mod_authz_core .c >
          # Apache 2.2
          # Order Deny , Allow
          # Deny from all
          # Allow from 127.0.0.1
          # Allow from ::1
          Order allow , deny
          Allow from all
     </ IfModule >
</ Directory >
[...]


     Figura 10.17: Primeira parte das configurações no arquivo roundcubemail.conf
10.8 Configurando Web Mail                                                           95


[...]
< Directory / usr / share / roundcubemail / installer / >
     < IfModule mod_authz_core .c >
         # Apache 2.4
         # Require local
         Require all granted
     </ IfModule >
     < IfModule ! mod_authz_core .c >
        # Apache 2.2
         # Order Deny , Allow
         # Deny from all
         # Allow from 127.0.0.1
         # Allow from ::1
         Order allow , deny
         Allow from all
     </ IfModule >
</ Directory >


[...]


     Figura 10.18: Segunda parte das configurações no arquivo roundcubemail.conf

   É importante notar que as alterações devem ser feitas em ambas as seçoes <Directory
/usr/share/roundcubemail/> e <Directory /usr/share/roundcubemail/installer>. Após
as modificações, salve as alterações, feche o arquivo e reinicie o serviço utilizando os
comandos :

    # systemctl stop httpd

    # systemctl start httpd
10.8 Configurando Web Mail                                                        96

   Após realizar as configurações no arquivo do apache, digite no navegador $IPMAQUI-
NAVIRTUAL/roundcubemail/installer e você deve ser redirecionado para essa página:




                  Figura 10.19: Tela inicial configuração do webmail
10.8 Configurando Web Mail                                                         97

   Após isso, clique em next no final da página, e faça as seguintes alterações:

alterar o product_name -> Relatorio
alterar em IMAP SETTINGS
default_host -> ssl :// mail . exemplo . com
default_port -> 143 sem criptografia , 993 com criptografia
alterar em SMTP SETTINGS
smtp_server -> ssl :// mail . exemplo . com
smtp_port -> 587 sem criptografia , 465 com criptografia
alterar em Display settings e user prefs
language -> pt - BR
skin -> elastic ( interface )
alterar em Plugins
archive -> Para arquivar os emails
enigma -> Habilitar criptografia PGP
emoticons -> Ativar emoji nos emails ( opcional )
password -> Possibilidade de alterar senha pela internet
zipdownload -> Baixar todos os arquivos em anexo em um arquivo zip


                          Figura 10.20: Configurando webmail

   Clique em continue no final da página e um arquivo de configuração será gerado com
o nome config.inc.php no diretório /etc/roundcubemail.
   Altere a seguinte linha dentro do arquivo:

    $config[db_dsnw] = "sqlite=////var/roundcubemail
    /roundcube.sqlite?mode=0646";

   E adicione a seguinte linha:

    $config["mail_domain"] = "exemplo.com"

   Altere o dono e o grupo do diretorio /var/roundcubemail para apache.

    # chown apache:apache /var/roundcubemail
10.8 Configurando Web Mail                                                             98

   Para fazer com que o roundcube não verifique o certificado fornecido, deve-se adicionar
as seguintes linhas no arquivo config.inc.php:

$config [ ’ imap_conn_options ’] = array (
’ssl ’ = > array ( ’ verify_peer ’ = > false , ’ verify_peer_name ’ = > false ) ,
’tls ’ = > array ( ’ verify_peer ’ = > false , ’ verify_peer_name ’ = > false ));


$config [ ’ smtp_conn_options ’] = array (
’ssl ’ = > array ( ’ verify_peer ’ = > false , ’ verify_peer_name ’ = > false ) ,
’tls ’ = > array ( ’ verify_peer ’ = > false , ’ verify_peer_name ’ = > false ));


      Figura 10.21: Linhas de configuração adicionadas ao arquivo config.inc.php

   Por fim, salve as alterações e feche o arquivo. Caso as alterações tenham sido feitas
de maneira correta, ao retornar para o endereço $IPMAQUINAVIRTUAL/roundcube-
mail/installer o banco de dados estará com status OK, e poderá ser feito o teste do
servidor de email como demonstrado na figura abaixo.




               Figura 10.22: Testando servidor de email com criptografia
10.8 Configurando Web Mail                                                            99

   Após realizar os testes do servidor e verificar que tudo está correto, deve-se acessar
o endereço $IPMAQUINAVIRTUAL/roundcubemail/ para começar a utilizar o webmail.
Ao acessar este endereço, deverá ser exibida uma página de login semelhante à presente
na figura abaixo:




                       Figura 10.23: Tela de login do roundcube
Apêndice A

Firewall

   Um firewall é um serviço de segurança da rede que monitora o tráfego de entrada
e saída e decide permitir ou bloquear tráfegos específicos de acordo com um conjunto
definido de regras de segurança.
   Em suma, seu propósito é estabelecer uma barreira entre a rede interna à qual o dispo-
sitivo está conectado e os possíveis agentes maliciosos provenientes de conexões externas.


A.1      Configurando o firewall (alteração temporária)
   Para realizar a configuração do firewall existem diversas ferramentas disponíveis por
padrão na distribuíção Rocky Linux 9, como firewalld ou ufw, porém, será considerado
para esta seção o uso da ferramenta iptables, por ser uma ferramenta mais flexivel e
robusta quando comparada às alternativas.
A configuração do firewall pode ser feita utilizando o seguinte comando:

    # iptables [subcomando] [chain ] [parâmetro] [valor]
A.1 Configurando o firewall (alteração temporária)                                  101

No comando anterior, o campo subcomando pode asumir um dos seguintes valores:

-A = Anexa a regra ao final da cadeia ( chain ) especificada ;


-F = Apaga todas as regras da cadeia ( chain ) especificada ;


-L = Lista todas as regras contidas na cadeia ( chain ) especificada ;


-N = Cria uma nova cadeia ( chain ) com o nome especificado ;


-P = Configura a regra padrao da cadeia ( chain ) especificada ;


-D = Apaga uma regra em uma posicao da cadeia ( chain ) especificada ;


-X = Exclui uma cadeia ( chain ) que esteja vazia ;


-I = Insere uma regra em uma posicao da cadeia ( chain ) especificada ;


                  Figura A.1: Parametros para o campo subcomandos.

   Por sua vez, o valor que irá assumir o campo chain pode ser descrito como um conjunto
de regras organizadas em grupos inerentes a cada tabela do iptables, cujos valores podem
ser:

Tabela FILTER = INPUT , OUTPUT , FORWARD ;


Tabela NAT = PREROUTING , POSTROUTING , OUTPUT ;


Tabela MANGLE = PREROUTING , POSTROUTING , INPUIT , OUTPUT , FORWARD ;


Tabela RAW = PREROUTING , OUTPUT ;


Tabela SECURITY = Usada para regras de rede MAC ( Mandatory Access Control ).


                      Figura A.2: Parametros para o campo chain.

   É importante notar, porém, que as alterações realizadas por este comando são tem-
porárias, ou seja, serão efetivos apenas durante a sessão atual.
A.2 Configurando o firewall (configuração persistente)                               102

A.2       Configurando o firewall (configuração persistente)
As configurações realizadas utilizando apenas o comando iptables alteram o funciona-
mento do firewall apenas durante a sessão atual. Para configurações persistentes, é neces-
sário criar um arquivo .sh, na pasta /usr/sbin que será executado durante a inicialização
da máquina. Abaixo, um exemplo de um arquivo shellscript, denominado myfirewall,
criado para este fim:

# ! / bin / bash


EXT = enp3s2
INT = eno1


case " $1 " in
    start )
         echo 1 > / proc / sys / net / ipv4 / ip_forward
         iptables -F
         iptables -t nat -F
         iptables -P FORWARD DROP
         iptables -A FORWARD -i $INT -p tcp -- dport 80 -j DROP
         iptables -A FORWARD -i $INT -p tcp -- dport 443 -j DROP
         iptables -t nat -A POSTROUTING -o $EXT -j MASQUERADE
         echo " Firewall ␣ habilitado "
         ;;
    stop )
         echo 1 > / proc / sys / net / ipv4 / ip_forward
         iptables -F
              iptables -t nat -F
         iptables -P FORWARD ACCEPT
         iptables -t nat -A POSTROUTING -o $EXT -j MASQUERADE
         echo " Firewall ␣ desabilitado "
         ;;
    *)
         echo " Use : " $0 " { start | stop } "
         exit 1


esac


exit 0


Figura A.3: Arquivo shellscript contendo as configurações necessárias para o funciona-
mento do firewall

   As regras utilizadas na configuração acima possuem o seguinte significado:
A.2 Configurando o firewall (configuração persistente)                            103

   Apaga todas as regras padrões da tabela filter do firewall.

    # iptables -F

   Apaga todas as regras padrões da tabela nat do firewall.

    # iptables -t nat -F

   Adiciona uma regra padrão de descartar os pacotes que venham da rede interna com
destino a rede externa.

    # iptables -P FORWARD DROP

   Adiciona uma regra padrão de aceitar os pacotes que venham da rede interna com
destino a rede externa.

    # iptables -P FORWARD ACCEPT

   Adicona uma regra na tabela filter do firewall que descarta todos os pacotes tcp na
porta 80 (http) que cheguem na placa interna.

    # iptables -A FORWARD -i $INT -p tcp –dport 80 -j DROP

   Adicona uma regra na tabela filter do firewall que descarta todos os pacotes tcp na
porta 443 (https) que cheguem na placa interna.

    # iptables -A FORWARD -i $INT -p tcp –dport 443 -j DROP

   Adiciona uma regra na tabela nat do firewall que habilita o mascaramento de IP na
placa de rede externa.

    # iptables -t nat -A POSTROUTING -o $EXT -j MASQUERADE
A.2 Configurando o firewall (configuração persistente)                                  104

   Para que as configurações persistam mesmo após a reinicialização, deve-se criar o
seguinte arquivo, denominado neste caso como myfirewall.service, no diretório localizado
/usr/lib/systemmd/system/ , e neste arquivo realizar as seguintes configurações:

[ Unit ]
Description = Descricao sobre meu Firewall
After = network - online . target


[ Service ]
Type = oneshot
RemainAfterExit = yes
ExecStart =/ usr / sbin / myfirewall start
ExecStop =/ usr / sbin / myfirewall stop


[ Install ]
WantedBy = multi - user . target


  Figura A.4: Configurações necessárias para o funcionamento persistente do firewall

   Por fim, basta utilizar os seguintes comandos, na sequência listada, para limpar as
configurações vigentes e então habilitar as configurações do firewall definidas pelo usuário:

    # iptables -F

    # iptables -t nat -F

    # iptables -P FORWARD ACCEPT

    # iptables -L

    # systemctl daemon-reload

    # systemctl enable myfirewall
