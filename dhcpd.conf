IP and Subnetting Configurations and Calculations
Understanding IP and Subnet Basics
IP Address: Uniquely identifies a device (e.g., 192.168.1.10).
Subnet Mask: Splits an IP into the network and host portions.
Broadcast Address: The last address in a subnet (e.g., 192.168.1.255).
Subnetting Example
For a /24 subnet (255.255.255.0):

Network Address: 192.168.1.0
First Usable Host: 192.168.1.1
Last Usable Host: 192.168.1.254
Broadcast Address: 192.168.1.255
Total Hosts: 2^8 - 2 = 254
If you split /24 into smaller subnets, e.g., /26 (255.255.255.192):

Subnets Created: 2^2 = 4
Hosts per Subnet: 2^6 - 2 = 62
Subnets:
192.168.1.0 - 192.168.1.63
192.168.1.64 - 192.168.1.127
192.168.1.128 - 192.168.1.191
192.168.1.192 - 192.168.1.255
Configuring OpenSSH Server on Rocky Linux
Install OpenSSH:
bash
Copiar código
sudo dnf install -y openssh-server
Configure SSH:
Edit /etc/ssh/sshd_config to:
Change port (e.g., Port 2222).
Disable root login (PermitRootLogin no).
Start and Enable the Service:
bash
Copiar código
sudo systemctl start sshd
sudo systemctl enable sshd
Test SSH:
From a client:
bash
Copiar código
ssh -p 2222 username@server_ip
Configuring DHCP Server on Rocky Linux
Install DHCP Server:
bash
Copiar código
sudo dnf install -y dhcp-server
Edit the Configuration:
File: /etc/dhcp/dhcpd.conf
Example:
plaintext
Copiar código
subnet 192.168.1.0 netmask 255.255.255.0 {
    range 192.168.1.100 192.168.1.200;
    option routers 192.168.1.1;
    option domain-name-servers 8.8.8.8, 8.8.4.4;
}
Start and Enable the Service:
bash
Copiar código
sudo systemctl start dhcpd
sudo systemctl enable dhcpd
Configuring Squid Proxy Server on Rocky Linux
Install Squid:
bash
Copiar código
sudo dnf install -y squid
Edit Squid Configuration:
File: /etc/squid/squid.conf
Example:
plaintext
Copiar código
acl localnet src 192.168.1.0/24
http_access allow localnet
http_access deny all
Start and Enable Squid:
bash
Copiar código
sudo systemctl start squid
sudo systemctl enable squid
Test:
Configure a client’s browser to use the proxy (default port: 3128).
Creating a Script to Execute at Startup
Create the Script:
bash
Copiar código
nano /path/to/script.sh
#!/bin/bash
echo "Startup script executed" >> /var/log/startup.log
Make it executable:
bash
Copiar código
chmod +x /path/to/script.sh
Systemd Configuration:
Create a service file:
bash
Copiar código
sudo nano /etc/systemd/system/startup-script.service
Add:
plaintext
Copiar código
[Unit]
Description=Startup Script

[Service]
ExecStart=/path/to/script.sh

[Install]
WantedBy=multi-user.target
Enable the service:
bash
Copiar código
sudo systemctl enable startup-script.service
Notes on IPTables Commands
Force Proxy Navigation:

bash
Copiar código
iptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-port 3128
Enable NAT (Masquerading):

bash
Copiar código
iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
Enable IP Forwarding:

bash
Copiar código
echo 1 > /proc/sys/net/ipv4/ip_forward
Types of ACLs in Squid (with Examples)
Allow/Deny Specific IPs:

plaintext
Copiar código
acl allow_ip src 192.168.1.100
http_access allow allow_ip
Restrict Websites:

plaintext
Copiar código
acl bad_sites dstdomain .facebook.com .youtube.com
http_access deny bad_sites
Time-Based Rules:

plaintext
Copiar código
acl work_hours time MTWHF 09:00-17:00
http_access allow work_hours
User-Based Rules (requires authentication):

plaintext
Copiar código
acl users proxy_auth REQUIRED
http_access allow users
Install HTTP tools for user-based ACLs:

bash
Copiar código
sudo dnf install httpd-tools
htpasswd -c /etc/squid/passwords user1
Update squid.conf to use authentication.



[Unit]
Description=Run My Startup Script
After=multi-user.target

[Service]
Type=oneshot
ExecStart=/path/to/my_startup_script.sh
RemainAfterExit=true

[Install]
WantedBy=multi-user.target

